[{"url":"/2024/01/27/ASS%E5%AD%97%E5%B9%95%E6%A0%B7%E5%BC%8F/","content":"1. ASS 概述ASS 全称 Advanced SubStation Alpha，是一种比 SSA 更为高级的字幕格式，实质是SSA v4.00+ 版本。它拥有比 SSA 更多的功能。\nSSA 全称 Sub Station Alpha，是一种字幕格式，其本身是一个 Windows 平台下专用于创建和编辑 SSA 格式字幕的软件，该软件已经不再开发了，而它所创造的 SSA 格式却流行开来，并演化出了更先进的 ASS 格式。SSA 或 ASS 格式能实现比传统字幕诸如 srt 等格式更为复杂的功能。\n目前 ASS 字幕制作人员所看到的效果绝大多数都是由 xy-VSFilter 和 libass 渲染的，于是这两个渲染器就成了 ASS 事实上的标准。\nASS 格式字幕具有以下特点：\n\nSSA v4.00 与之前的 SSA 版本格式不同，v4 可以阅读和加载以前版本的格式，但之前版本不支持v4以上的编写格式。换句话说，SSA从v4版本开始可以阅读它认识的命令而忽略不认识的命令，从而可以向下兼容，也可以向上兼容。\n\n**SSA 是简单的文本文件 (DOS)**，因此可用任何文本编辑器手动编辑，但在手动编辑时必须谨慎，因为 SSA 将假定脚本遵守本文中的规定，在解析时任何错误都可能导致不可预测的结果。\n\n脚本格式中的某些改变是为了允许 SSA v4.00 及以上的所有版本可以识别所有现存的和将来的 SSA 脚本。例如，新的 Format 字段允许 SSA 只读取它所能识别的并忽略未来可能加入的新的信息。\n\n文件编写时所划分的各部分，从形式上来说类似于 ini 文件，但它并非真正的ini文件，不能像用 ini 文件一样使用它。\n\nSSA文件最多包含五部分：Script Info、v4+ Styles、Events、Fonts、Graphics，其中 Script Info 必须是整个文件的第一行。现在的SSA文件已经很少包含 Fonts 和 Graphics 这两个部分了，因为这些功能只被 Sub Station Alpha 这一个程序所支持，而其它的 Filter (Vobsub&#x2F;Vsfilter&#x2F;Avery Lee Subtitler filter) 都不支持。\n\nSSA文件的各个部分中的绝大多数行以一个 行描述符(line descriptor) 加上冒号开头，以指明它包含了什么信息。\n\nSSA文件中每行中的信息字段以逗号分隔，于是在 角色名称(Events) 和 样式名称 (v4+ Styles) 中使用逗号是非法的（SSA 会阻止你这么做），这也使得将 SSA 脚本作为一个 CSV 文件把块导入到表格变得简单，同时砍掉在其他字幕节目中要用到的列信息。\n\n事件部分(Events) 各行排列不分先后，它们可以以完全相反的顺序排列，SSA 会将它们按正确的顺序播放。即，你不能假定脚本文件中的每条对话行是按时间顺序排列的。如果两条对话的开始时间相同，那么会根据在脚本中的排列顺序显示到屏幕上。\n\n格式不正确的行会被忽略，SSA 会丢弃任何它不能识别的行，同时在解析完后给出警告指明被忽略的行数。\n\n行不能被分割，脚本中每个条目在单行中包含了它的完整信息，不能被分成多行。\n\n如果在脚本中使用了一个未知的样式，将会使用默认的 *Default 样式。例如，如果从另一个脚本复制了一些行而没有复制对应的样式信息，那么就会使用默认样式。\n\n当一个风格中指定了系统没有安装的字体，会用 Arial 字体代替。\n\n\n2. [Script Info] 部分Script Info 部分包含了文件内容的标题和总体信息，主要用于介绍文件本身和制作者。[Script Info] 必须是 v4 版本 SSA 的第一行。该部分主要内容如下：\n;分号，后面可以跟任何内容，只在脚本中用作注释，加载脚本时不可见。分号必须是该行的第一个字符，旧版本中使用 !: 注释。\n\nTitle标题，对脚本的描述，通常为作品名称或字幕组名称。如果未指定，自动设置为 &lt;untitled&gt;。\n\nOriginal Script最初创建脚本的作者，通常为作者名称或字幕组名称。如果未指定，自动设置为 &lt;unknown&gt;。\n\nOriginal Translation（可选）最初翻译对话的人。如果未指定，该项不显示。\n\nOriginal Editing（可选）最初脚本的编辑者，通常是对翻译润色和校对的人。如果未指定，该项不显示。\n\nOriginal Timing（可选）最初的时间轴人员。如果未指定，该项不显示。\n\nSynch Point（可选）指明脚本在视频的何处开始播放，通常使用 0。如果未指定，该项不显示。\n\nScript Updated By（可选）对原脚本进行更新的其他字幕团体的人。如果未指定，该项不显示。\n\nUpdate Details（可选）其他字幕团体对原脚本更新的细节。如果未指定，该项不显示。\n\nScriptTypeSSA 脚本格式的版本信息，例如 V4.00 ，ASS 版本为 V4.00+。如果当前使用的 SSA 程序版本旧于脚本的版本，将给出警告。\n\nCollisions决定了在自动防止字幕碰撞/冲突重叠显示时，字幕是如何移动的，包含 Normal 和 Reverse 两种模式。设置为 Normal，将尝试使用「Margins」指定的位置来定位字幕。同时，字幕会垂直地移动来防止重叠。在 Normal 的防重叠模式下，新字幕会出现在已存在字幕的上方，但它会寻找最低的不产生重叠的位置，来填补其他字幕产生的空隙。设置为 Reverse，已存在的字幕会上移给新字幕腾出空间，这意味这字幕总是可以自上向下地阅读，但也意味着已存在的字幕可能会在新字幕出现之前出现在屏幕的中间，它会占用大量的屏幕区域。\n\nPlayResY渲染字幕时的渲染范围的高度，建议与视频分辨率一致。如果使用 Directdraw 播放，SSA v4 会自动选择最接近的已启用的设置。PlayResX渲染字幕时的渲染范围的宽度，建议与视频分辨率一致。如果使用 Directdraw 播放，SSA v4 会自动选择最接近的已启用的设置。关于屏幕坐标，有如下注意事项：1. 屏幕的左上角坐标为(0,0),右下角坐标为(PlayResX数值,PlayResY数值)，所有给出的坐标(三个边距, \\pos, \\move, 矢量绘图等)都以此数值作为参照；2. 所有的文字字号均按照此分辨率等比例放大缩小；3. 这个分辨率不影响最终显示文字的宽高比, 但影响矢量绘画图形的宽高比。\n\nPlayDepth渲染字幕时的颜色深度。如果使用 Directdraw 播放，SSA v4 会自动选择最接近的已启用的设置。\n\nTimer脚本的计时器速度，也即播放速度，为百分数，默认为 100%。例如，100.0000 代表 100%，保留四位小数。计时器速度是应用于 SSA 时钟的时间乘数，以提供斜坡时间来扩展或压缩脚本的总时间。速度大于 100% 会减少脚本总时间，意味着字幕会逐步地越来越早地出现；速度小于 100% 会增加脚本总时间，意味着字幕会逐步地越来越晚地出现（就像一个正的斜坡时间）。扩展和压缩只发生在脚本播放时，这个值不会改变脚本事件部分的实际时间。\n\nWrapStyle当一个Dialogue行中存在用空格分开的多句话时，此项定义了默认的换行方式。0：智能换行，分割比较均匀，上面的行较长。1：从行尾的词换行，只有 \\N 能强制换行。2：不换行，\\n 和 \\N 强制换行。3：和 0 一样智能换行，下面的行较长。\n\nScaledBorderAndShadow指定边框宽度与阴影深度是否随着视频分辨率等比例缩放，有 NO 和 YSE 两种类型，默认为 No。值为 No，边框宽度与阴影深度完全按照指定的像素数显示；值为 Yes，边框宽度与阴影深度随着实际视频的分辨率同等比例缩放。\n\n常见的 ASS 文件还可能在 [Script Info] 部分添加一个 YCbCr Matrix(色彩空间，即色域) 选项。\n3. [v4 Styles] 部分Styles 定义了字幕的外貌和定位，ASS 格式应当使用 [v4+ Styles] ，该部分分为 Format 和 Style 两个部分。\n3.1 Format 定义行Format 行定义了 Style 行中每一个字段所代表的含义，Format 行必须出现在所有 Style 行之前，因为它决定了 SSA 如何来解析 Style 行，Format 行所列出的字段必须正确拼写。Format 行允许未来的脚本格式中添加新的字段，也允许旧版本的软件读出它所能识别的字段，即便字段的顺序发生了变化。一般情况下该字段属性需要写全，其字段名如下：\nFormat: Name,Fontname, Fontsize, PrimaryColour, SecondaryColour, TertiaryColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, AlphaLevel, Encoding\n\n3.2 Style 样式行Style 行定义了字幕显示的样式，用于格式化脚本显示的文本，每一个被脚本使用的样式都应该被定义为 Style 行。Style 行中的所有设定，除了阴影和边框的类型和深度，都可以被字幕文本中的控制代码所覆写。Style 行中的字段应与 Format 行中设定的字段一一对应，各字段内容如下：\nName样式的名称，用于 [Events]部分 引用，区分大小写，不能包含逗号。\n\nFontname使用的字体名称，区分大小写。\n\nFontsize字体的大小，即字号。\n\nPrimaryColour文本主体颜色，设置字幕正常显示时的填充颜色。SecondaryColour文本次要颜色，在某条字幕为了防止重叠而自动移动时可能会使用该颜色而不是 PrimaryColour 以区分不同的字幕。主要是用在卡拉 OK 效果中由 SecondaryColour 变为 PrimaryColour。TertiaryColour OutlineColor文本边框颜色，ASS 中的名称为 OutlineColor。BackColour文本阴影颜色。以上四种字幕颜色设置均采用长整型 BGR（蓝绿红）值，还包含一个 alpha 通道信息。该值的十六进制字节顺序为 AABBGGRR，&amp;H是十六进制的标识符。例如，&amp;H00FF0000(蓝色)、&amp;H0000FF00(绿色)、&amp;H000000FF(红色)、&amp;H00FFFFFF(白色)。\n\nBold定义文本是否为粗体，-1 是粗体，0 不是。Bold 属性与斜体属性相互独立，即可以把文本同时设置为粗体和斜体。Italic定义文本是否为斜体，-1 是斜体，0 不是。Italic属性与粗体属性相互独立，即可以把文本同时设置为粗体和斜体。Underline定义文本是否有下划线，-1 是有，0 是没有。Strikeout定义文本是否有中划线（删除线），-1 是有，0 是没有。\n\nScaleX文本横向缩放，即修改字体的宽度，为百分数，100为正常宽度。ScaleY文本纵向缩放，即修改字体的高度，为百分数，100为正常高度。\n\nSpacing字间距，单位为像素px，0为正常间距。\n\nAngle旋转角度，绕 z 轴逆时针旋转，负数则是顺时针旋转，单位为度，可用小数，旋转所基于的原点由 Alignment 定义。\n\nBorderStyle边框样式，1 为边框 + 阴影，3 为不透明纯色背景，当值为3时, 文字底面为纯色的背景, 纯色背景下方为阴影背景，可以被 \\r 重置。Outline文字边框宽度，如果 BorderStyle 为 1，则该属性定义了文字边框的像素宽度，常见的值有 0、1、2、3、4。Shadow文字阴影深度，如果 BorderStyle 为 1，则该属性定义了文字阴影的像素深度，常见的值有 0、1、2、3、4，阴影深度向右下偏移。阴影总是基于边框使用，当边框宽度没有给定时 SSA 会强制把边框设置为 1px，事实上阴影和边框可以独立使用，互不影响。\n\nAlignment对齐方式，该属性定义了文本在屏幕上的位置，采用九宫格位置，从左上到右下其值依次为5、6、7、9、10、11、1、2、3。在 ASS 中则是按数字键盘对应的位置，从左上到右下其值依次为7、8、9、4、5、6、1、2、3。MarginL左边距，单位为像素px，即到屏幕左边缘的距离。MarginR右边距，单位为像素px，即到屏幕右边缘的距离。MarginV垂直边距，单位为像素px，对于底部字幕，它是字幕和屏幕底部的距离，对于顶部字幕，它是字幕和屏幕顶部的距离，对于中部字幕，该值被忽略，字幕会垂直居中。三个屏幕边距MarginL、MarginR、MarginV定义了字幕可以出现的区域。\n\nAlphaLevel定义文本透明度，SSA 尚未使用，ASS 中没有该字段。\n\nEncoding 定义字体的字符集或编码方式，在多语种的 Windows 安装中它可以获取多种语言中的字符，0 为 ANSI，1 为 默认，128 为 日文，134 为 简体中文，136 为 繁体中文，一般用默认 1 即可。当文件是 Unicode 编码时，该字段在解析对话时会起作用。\n\n4. [Events] 部分Events 定义了字幕对白、时间轴信息、以及对白的显示方式，该部分分为 Format、Dialogue 等部分。\n4.1 Format 定义行Format 决定了 SSA 如何来解析下面的事件行，Format 行必须出现在所有 Style 行之前，Format 行所列出的字段必须正确拼写。其字段名如下：\nFormat: Marked/Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text\n\n4.2 Dialogue 对话行Dialogue 是一个对话事件，即显示一些文本，包含了字幕文本、时间轴信息以及字幕的显示方式，Dialogue 行中的字段应与 Format 行中设定的字段一一对应，各字段内容如下：\nMarked在 SSA 文件中该字段为 Marked，值为 0 表示该行为未标识行，值为 1 表示该行为标识行。Layer在 SSA 文件中该字段为 Layer，定义字幕图层，可为任何整数，图层数值不同的字幕会在重叠检测中被忽略，即不会发生冲突，图层数值大的会直接覆盖在图层数值小的上面。\n\nStart事件的开始时间，格式为 0:00:00:00（小时:分:秒:毫秒），即字幕显示在屏幕上时脚本播放经过的时间，注意小时只有一位。End事件的结束时间，格式为 0:00:00:00（小时:分:秒:毫秒），即字幕在屏幕上消失时脚本播放经过的时间，注意小时只有一位。\n\nStyle样式名，即在 [v4+ Styles] 中定义的样式名称，如果要使用的 Default 样式已存储在脚本中却被 SSA 忽略了，这时要使用它可以修改 [v4+ Styles] 中的样式名称，以便它出现在脚本的样式列表里。在 SSA 这个软件中，有一个自带的 *Default 样式，如果在 [v4+ Styles] 里没有找到对应的样式，那么就会使用自带的 *Default 样式。根据 SSA 软件本身的特性，如果设置为 Default（无星号），即便在 [v4+ Styles] 中定义了自己的 Default 样式，SSA 这个软件也会使用自带的 *Default 样式。但在实际的应用中，都是在 [v4+ Styles] 定义好 Default 样式，如果之后使用了未定义的样式名，那么就使用 Default 样式，如果 Default 样式也没有定义，那样才使用渲染器自带的样式。\n\nName角色名，说这条对白的角色名，只为了在编辑和设定时间轴时方便辨认，可为空值。\n\nMarginL文本左边距覆写值，单位为像素px，共 4 位数字，0000 表示使用在 Style 行中定义的值。MarginR文本右边距覆写值，单位为像素px，共 4 位数字，0000 表示使用在 Style 行中定义的值。MarginV文本垂直边距覆写值，单位为像素px，共 4 位数字，0000 表示使用在 Style 行中定义的值。\n\nEffect过渡效果。可以为空值，效果名称区分大小写，必须正确拼写，不加引号，该属性有以下三种属性值：Karaoke表示卡拉OK效果，依次高亮每个字。在ASS中该效果类型已经废弃不用。Scroll up;y1;y2;delay[;fadeawayheight]表示文本或图片会在屏幕上向上滚动，Scroll up 之后的参数字段用分号分隔。Scroll down;y1;y2;delay[;fadeawayheight]同上，为向下滚动。y1 和 y2 值定义了文本在屏幕上滚动的垂直范围。两值单位为像素px，不区分顺序，位置可以互换。如果两个值都是 0，文本会在整个屏幕高度向上滚动。delay 可取 1-100 的值，0 表示无延迟按原速度滚动，数字越大速度越小，当 delay 值大于 1 时，移动 1px 需要(1000/delay)秒。fadeawayheigh 值可选，为上下的淡入淡出范围，可以使文本滚动到其范围的边缘时呈现淡出效果。Banner;delay[;lefttoright;fadeawaywidth]表示所有文本或图片都忽略长度到一行里，从右向左滚动经过屏幕。delay 值同上。lefttoright 值可选，为 0 或 1。默认为 0，表示从右向左滚动，1则是从左向右移动。fadeawaywidth 值同上，为左右的淡入淡出范围。\n\nText字幕文本，是作为字幕实际出现在屏幕上的文本。任何第 9 个逗号之后的文本都被当作是字幕文本，所以可以包含逗号。文本中可以包含表示换行的 \\n 代码，也可以包含在大括号 &#123;&#125; 之间出现的样式覆写控制代码。\n\n4.3 Comment 注释行Comment 行是一个注释事件，起评论和说明的作用，可以与其它类型的事件行包含一样的信息，但不会被作为字幕加载到屏幕上。\n4.4 Picture 图片行**Picture 行是一个图片事件，支持的图片格式有 .bmp、.jpg、.gif、.ico 以及.wmf，但不支持.png**，与Dialogue行包含一样的控制信息，但要在 字段10 的位置指定显示的图片的完整路径与图片名称。\n写入 Picture 行后，之前的样式定义效果会有改变，其中 Effect（过渡效果）可以运用到图片事件上，MarginL（左边距）和 MarginV（垂直边距）被用来指定图片与左边缘与下边缘的像素距离，当 MarginL 为 0000 时，图片水平居中，当 MarginV 为 0000&#96;时，图片垂直居中。\n只有SSA软件能支持加载图片事件，Filter不支持加载 Picture 行。\n4.5 Sound 音频行**Sound 行是一个音频事件，支持的音频格式为 .wav**，与 Dialogue 行包含一样的控制信息，但要在 字段10 的位置指定加载的音频文件的完整路径与名称。\n写入 Sound 行后，之前的样式定义效果会有改变，其中Style（样式）与 MarginL（左边距）、MarginR（右边距）、MarginV（垂直边距）等值被忽略，End（结束时间值）也被忽略，该声音会播放到它结束，或者播放到新的声音行加入为止。\n只有SSA软件能支持加载图片事件，Filter不支持加载 Sound 行。\n4.6 Movie 视频行**Movie 行是一个视频事件，支持的音频格式为 .avi**，与 Dialogue 行包含一样的控制信息，但要在字段10的位置指定加载的视频文件的完整路径与名称。\n写入 Movie 行后，之前的样式定义效果会有改变，其中 Style（样式）和 Effect（过渡效果）会被忽略， End（结束时间值）指定了视频消失的时间，但如果 avi 文件仍然没有结束，则其声音会继续播放。MarginL（左边距）和 MarginV（垂直边距）可以指定影片左上角的位置（和 Picture 事件不同），MarginL 或 MarginV 为  0000 意味着影片水平居中或垂直居中。\n如果在 wav 声音播放的过程中任何 avi 影片开始播放，那么任何 avi 中的声音将听不见，同理，在 avi 影片播放的过程中 wav 声音开始播放，那么 wav 声音将听不见。当Movie与Sound行有时间重叠时，实际听到的声音以先开始的内容为准。\n只有SSA软件能支持加载图片事件，Filter不支持加载 Movie 行。\n4.7 Command 命令行Command 行是一个命令事件，意味着 SSA 可以以后台任务执行指定的程序，与 Dialogue 行包含一样的控制信息，但要在字段10的位置指定要执行的程序的完整路径和名称。\n写入 Command 行后，之前的样式定义效果会有改变，其中 MarginL（左边距）、MarginR（右边距）、MarginV（垂直边距）、Effect（过渡效果）、End（结束时间值）会被忽略，程序会运行到它结束为止，或者直到人为地关闭。\n有一些 SSA 软件内置的命令可以在脚本中出现，但实际完全用不到，比如 SSA:Pause、SSA:Wait for trigger 或同步锁相控制命令(Genlock Control Commands)。这些命令都以 SSA: 开头，其作用如下：\nSSA:Pause 命令和在脚本播放时按 P 键有同样的功能。它作为第二同步点（Synch Point）在光盘换面后恢复播放字幕时很有用。SSA:Wait for audio trigger 命令和在脚本播放时按 P 键有同样的功能，但如果计算机的音频输入超过指定的 trigger 等级，暂停会被自动取消。它作为第二同步点（Synch Point）在光盘换面后恢复播放字幕时很有用。音频触发可以被按 P 键恢复播放来覆写，如果没有接收到足够大小的音频峰值，P 键也没有在 10 分钟内按下，音频触发会在 10 分钟后超时，然后播放无论如何都会恢复。\n只有SSA软件能支持加载图片事件，Filter不支持加载 Command 行。\n4.8 样式覆写代码样式覆写代码专用于 [Events] 部分的最后一个 Text 字段中，用来实现对文字和图片风格的重新定义。\n样式覆写代码有如下规则：\n\n除了 \\h、\\n 和 \\N，所有覆写代码都写在大括号 &#123; &#125; 里；\n所有覆写代码都以反斜杠 \\ 开头；\n一个大括号 &#123; &#125; 内可以放多个覆写代码；\n所有覆写代码都作用于其后的所有文字，如果要让某个覆写代码只作用于选定的文字，要在选定文字的后面加一个「取消」用的覆写代码，来取消前面的覆写代码；\n某些覆写代码会自动作用于整行文本，目前只有 Alignment 代码，之后可能会加入更多，例如，阴影和边框深度的覆写；\n\\pos 和 \\move 等也会作用于整行文本，下面的具体说明中会提到；\n在下面的写法中，&lt;&gt; 包围的内容表示该部分需要输入参数，[] 包围的内容表示可选项；\n\n常见的样式覆写代码如下：\n\\n换行，回车。如果启用了智能换行，\\n 会被忽略。示例：第一行\\n第二行。\\n 只在 WrapStyle: 2 或 \\q2 时会换行，其他模式下都相当于一个空格。\n\n\\N换行，回车。当智能换行启用时用来代替 \\n 实现换行。任何模式下都会强制换行，在 xy-VSFilter 下，\\N 在过渡效果 Banner 中也会换行；在 libass 下，\\N 在 Banner 中不换行，相当于空格。\n\n\\h强制空格。保证显示字幕时不会在它的这个空格上分行，即使 \\h 左右两个词在同一行。原文档中没有该代码的描述，根据渲染器的实际效果，猜测其作用为将其左右两边的单词连到一起，让解析器将两边的单词看作一个单词，在普通的换行中不会在单词中间换行。\n\n\\b&lt;0或1&gt;文本粗体，\\b1 把文本变为粗体，\\b0 强制文本不是粗体。当参数大于 1，则会作为字体的重量值（400 = 普通，700 = 粗体，大多数字体的粗细可以量化 2 或 3 个等级）。\n\n\\i&lt;0或1&gt;文本斜体，\\i1 把文本变为斜体，\\i0 强制文本不是斜体。\n\n\\u&lt;0或1&gt;文本下划线，\\u1 给文本变加下划线，\\u0 强制取消文本下划线。\n\n\\s&lt;0或1&gt;文本中划线，\\s1 给文本变加中划线（删除线），\\s0 强制取消文本中划线。\n\n\\bord&lt;宽度&gt;、\\xbord&lt;宽度&gt;、\\ybord&lt;宽度&gt;边框宽度，单位为像素px，可以是小数，有 x 或 y 时可以单独设置沿 X 轴或 Y 轴的边框宽度。示例：\\bord1、\\xbord2、\\ybord3。\n\n\\shad&lt;深度&gt;、\\xshad&lt;深度&gt;、\\yshad&lt;深度&gt;阴影深度，单位为像素px，可以是小数，有 x 或 y 时可以单独设置沿 X 轴或 Y 轴的阴影深度。示例：\\shad1、\\xshad2、\\yshad3。\n\n\\be&lt;强度&gt;边缘模糊，按一般模糊的倍数来模糊文字边缘。当强度过大时会导致文字消失。示例：\\be1。这里的 &lt;强度&gt; 必须是整数，表示模糊效果叠加的次数。当文字有边框时，模糊的对象是边框；当文字没有边框时，模糊的对象是文字本身。\n\n\\blur&lt;强度&gt;高斯模糊，与 \\be 相似，但它用的是更加高级的高斯模糊。示例：\\blur2.33。这里的 &lt;强度&gt; 可以是小数。当文字有边框时，模糊的对象是边框；当文字没有边框时，模糊的对象是文字本身。\n\n\\fn&lt;字体名&gt;指定一个系统中已安装的字体，区分大小写。如果指定的字体没有安装，那么会使用 Arial 字体。示例：\\fn微软雅黑。\n\n\\fs&lt;字体尺寸&gt;&lt;字体尺寸&gt; 是一个数字，指定了字体的点的尺寸。这里的字体尺寸并不是字号的大小，\\fs20 并不是字体大小（font-size）为 20px，而是指其行高（line-height）为 20px，主要归咎于 VSFilter 使用的 Windows GDI 的字体接口。\n\n\\fs+&lt;数值&gt;、\\fs-&lt;数值&gt;将当前文本的字体尺寸乘一定的倍数。例如，\\fs+2 表示将当前文本的字体尺寸乘 1.2，\\fs-3 表示将当前文本的字体尺寸乘 0.7。计算方式为(10 ± &lt;数值&gt;) * 当前字体尺寸，当计算的结果小于等于 0 时结果不生效，即依然为原来的字体尺寸。\n\n\\fscx&lt;百分数&gt;、\\fscy&lt;百分数&gt;缩放文字大小，表示缩放到原来的百分比。\\fscx&lt;百分数&gt; 为水平缩放，\\fscy&lt;百分数&gt; 为垂直缩放。示例：\\fscx233.33、\\fscy50。可适用于矢量图形。\n\n\\fsp&lt;像素值&gt;字间距，默认为 0。写法举例：\\fsp3。\n\n\\fr&lt;度数&gt;、\\frx&lt;度数&gt;、\\fry&lt;度数&gt;、\\frz&lt;度数&gt;文本旋转度数，表示沿 X 或 Y 或 Z 轴旋转一定的度数，&lt;度数&gt;可以为负值, 可以大于360，\\fr&lt;度数&gt; 默认表示沿 Z 轴旋转。示例：\\fr30、\\frx-30、\\fry-233.33、\\frz480。其旋转的原点由 \\org 决定，如果没有指定 \\org，那么按默认定位点（参见\\pos的说明）来旋转。\n\n\\fax&lt;因数&gt;、\\fay&lt;因数&gt;分别沿 X 轴和 Y 轴对文字行进行倾斜调整。 如 \\fax-0.5 等同于斜体。一般情况下因数的绝对值不要超过 2。\n\n\\fe&lt;字符集&gt;文本字符集（字体编码）。通常 0 为英文，1 为系统默认，134 为简体中文，136 为繁体中文。当 ASS/SSA 文件本身的编码非 Unicode 编码时, 这个数值指定哪种字符集来显示字幕，当 ASS/SSA 文件为 Unicode 方式编码如 UTF-8 时，可以忽略该设置。\n\n\\[&lt;颜色序号&gt;]c[&amp;][H]&lt;BBGGRR&gt;[&amp;]&lt;BBGGRR&gt; 是一个十六进制的 RGB 值，但颜色顺序相反，前导的 0 可以省略。&lt;颜色序号&gt; 可选值为 1、2、3 和 4，分别对应单独设置 PrimaryColour、SecondaryColour、OutlineColor 和 BackColour，&lt;颜色序号&gt; 未写时相当于设置 PrimaryColour。写法举例：\\c&amp;HFF0000&amp;、\\1c&amp;HFF&amp;、\\2c&amp;HFF00&amp;、\\3c&amp;HFFFFFF、\\4cFFFFFF。其中的 &amp; 和 H 按规范应该是要有的，但是如果没有也能正常解析。\\[&lt;颜色序号&gt;]c当 c 后面不跟其他字符时，会设置为当前使用的 Style 中定义的对应的值。\\&lt;颜色序号&gt;a[&amp;][H]&lt;AA&gt;[&amp;]&lt;AA&gt; 是一个十六进制的透明度数值，00 为全见，FF 为全透明。&lt;颜色序号&gt; 含义同上，但这里不能省略。写法举例：\\1a&amp;H80&amp;、\\2a&amp;H80、\\3a80、\\4a&amp;H80&amp;。其中的 &amp; 和 H 按规范应该是要有的，但是如果没有也能正常解析。\\alpha[&amp;][H]&lt;AA&gt;[&amp;]&lt;AA&gt; 是一个十六进制的透明度数值，00 为全见，FF 为全透明。它默认相当于 \\1a&amp;H&lt;AA&gt;&amp;。写法举例：\\alpha80。猜测是原文的笔误，实际效果为一次性设置 PrimaryColour、SecondaryColour、OutlineColor 和 BackColour。\n\n\\a&lt;位置&gt;&lt;位置&gt; 是一个数字，决定了字幕显示在屏幕上哪个位置。1、2、3 分别是底部的居左，居中、居右；5、6、7 分别是顶部的居左，居中、居右；9、10、11 分别是中部的居左，居中、居右。如果是 0 或者没有就设置为默认位置。如果出现了多个 \\a 或 \\an 则以第一个出现的为准。\\an&lt;位置&gt;与小键盘布局相同。如果出现了多个 \\a 或 \\an 则以第一个出现的为准。\n\n\\k&lt;时长&gt;&lt;时长&gt; 是一个以百分之一秒为单位的时间，表示以卡拉 OK 效果高亮它所控制的那段文本的延时。控制范围为 \\k&lt;时长&gt; 之后，下一个 \\k&lt;时长&gt; 或结尾之前，例如，&#123;\\k100&#125;这里受 \\k100 控制&#123;\\k200&#125;这里受 \\k200 控制。高亮之前文字使用 SecondaryColour，高亮后使用 PrimaryColour。某一代码的 &lt;时长&gt; 是相对于它之前的代码而言的，如上述例子中，字幕显示后的第 0 秒到第 1 秒是前面部分的效果，第 1 秒到第 3 秒是后面部分的效果。其高亮效果是把控制范围内的文字一次性全部变色。例如，&#123;\\k10&#125;你&#123;\\k10&#125;要&#123;\\k10&#125;这&#123;\\k10&#125;样&#123;\\k10&#125;才&#123;\\k10&#125;能&#123;\\k10&#125;有&#123;\\k10&#125;正&#123;\\k10&#125;常&#123;\\k10&#125;的&#123;\\k10&#125;卡&#123;\\k10&#125;拉&#123;\\k10&#125; OK &#123;\\k10&#125;效&#123;\\k10&#125;果。\\kf&lt;时长&gt;、\\K&lt;时长&gt;其他部分与 \\k&lt;时长&gt; 相同。其高亮效果是把控制范围内的文字从左到右流畅变色。例如，&#123;\\K300&#125;你这样就可以有正常的卡拉 OK 效果。\\ko&lt;时长&gt;其他部分与 \\k&lt;时长&gt; 相同。高亮之前边框被去除，高亮之后再显示边框。\\kt&lt;时长&gt;它重新定义之后的 \\k、\\kf、\\K、\\ko 所相对的开始时间。例如，&#123;\\k100&#125;壹&#123;\\kt300\\k100&#125;貳&#123;\\kt100\\k100&#125;叁，第 0 秒到第 1 秒高亮 壹，第 1 秒到第 2 秒高亮 叁，第 3 秒到第 4 秒高亮 貳。\n\n\\q&lt;方式&gt;&lt;方式&gt; 是一个数字，与 WrapStyle 相同。\n\n\n0：智能换行，分割比较均匀，上面的行较长。1：从行尾的词换行，只有 \\N 能强制换行。2：不换行，\\n 和 \\N 强制换行。3：和 0 一样智能换行，下面的行较长。\\r[&lt;样式名&gt;]&lt;样式名&gt; 是在 [v4 Styles+] 中定义的样式名，它会把这行中所有它之后的文本设置为样式名对应的样式。如果没有写 &lt;样式名&gt; 或者 &lt;样式名&gt; 没有被定义，将会设置为默认样式。例如，假设已定义了把字体设为蓝色的 Blue 样式，{\\1c&amp;HFF&amp;}这里是红色{\\rBlue}这里是蓝色{\\1c&amp;HFF00&amp;}这里是绿色。\n\\t([,,][&lt;加速度&gt;,]&lt;样式覆写代码&gt;)它可以将某一样式从某种效果逐渐地动态地转化到另一种效果。\n 和  表示相对于字幕显示时间的开始动画与结束动画的毫秒数，可选，如果没有写或者两者都是 0，则默认是在字幕的整段时间内进行动画效果。\n在  之前，其样式为该代码之前设置的样式。在  和  之间，其样式由之前的样式转变为 &lt;样式覆写代码&gt; 的样式。在  之后，其样式保持为 &lt;样式覆写代码&gt; 的样式。&lt;加速度&gt; 可以修改变换效果的线性程度，由此式计算：pow((t - t1) &#x2F; (t2 - t1), accel)，其中 t 为当前字幕已存在的时间，accel 为 &lt;加速度&gt;。从结果来看，&lt;加速度&gt; 等于 1 时为线性变换，大于 1 时先慢后快，大于 0 小于 1 时先慢后快。可选，默认为 1。\n只有以下 &lt;样式覆写代码&gt; 可以进行转化：\n\\bord&lt;宽度&gt;、\\xbord&lt;宽度&gt;、\\ybord&lt;宽度&gt;\\shad&lt;深度&gt;、\\xshad&lt;深度&gt;、\\yshad&lt;深度&gt;\\be&lt;强度&gt;\\blur&lt;强度&gt;\\fs&lt;字体尺寸&gt;\\fs+&lt;数值&gt;、\\fs-&lt;数值&gt;\\fscx&lt;百分数&gt;、\\fscy&lt;百分数&gt;\\fsp&lt;像素值&gt;\\fr&lt;度数&gt;、\\frx&lt;度数&gt;、\\fry&lt;度数&gt;、\\frz&lt;度数&gt;\\fax&lt;因数&gt;、\\fay&lt;因数&gt;[&lt;颜色序号&gt;]c[&amp;][H][&amp;]&lt;颜色序号&gt;a[&amp;][H][&amp;]\\alpha[i]clip(,,,)当一行中含有多个 &lt;样式覆写代码&gt; 相同但  和  不同的 \\t 时，结果比较迷。当一行中含有 \\t 时会忽略字幕重叠冲突的检测。\n\\move(,,,[,,])提供字幕的移动效果。, 是开始点坐标，, 是结束点坐标。 和  是相对于字幕显示时间的开始运动与结束运动的毫秒时间。\n在  之前，字幕定位在 ,。在  与  之间，字幕从 , 均速移动到 ,。在  之后，字幕定位在 ,。当  和  没写或者都是 0 时，则在字幕的整段时间内均速移动。当一行中有多个 \\pos 和 \\move 时，以第一个为准。当 \\move 和 Effect 效果同时存在时，结果比较迷。当一行中含有 \\move 时会忽略字幕重叠冲突的检测。\n\\pos(,)将字幕定位在坐标点 ,。屏幕的左上角为 0,0。字幕的「定位点」由 \\a&lt;位置&gt;、\\an&lt;位置&gt; 和 Alignment 决定。例如：\n\\an1 的定位点在字幕的左下角。\\an2 的定位点在字幕底边的正中间。\\an3 的定位点在字幕的右下角。\\an4 的定位点在字幕左边线的正中间。\\an5 的定位点在字幕垂直水平的正中间。\\an6 的定位点在字幕右边线的正中间。\\an7 的定位点在字幕的左上角。\\an8 的定位点在字幕顶边的正中间。\\an9 的定位点在字幕的右上角。当一行中有多个 \\pos 和 \\move 时，以第一个为准。事实上 \\pos(,) 相当于 \\move(,,,,0,0)。当一行中含有 \\pos 时会忽略字幕重叠冲突的检测。\n\\org(,)设置字幕的原点为 ,。字幕的原点会影响其旋转效果，字幕是基于原点来旋转的。当未设置时默认为字幕的定位点。当一行中有多个 \\org 时，以第一个为准。原点就是定位点，定位点就是原点。\n\\fad(,)提供简单的淡入淡出效果。t1 为淡入时间长度，t2 为淡出时间长度。单位为毫秒。当一行中有多个 \\fad 或 \\fade 时，以第一个为准。\n\\fade(,,,,,,)提供复杂的淡入淡出效果。单位为毫秒。\n在  之前，透明度为 。在  与  之间，透明度由  变化到 。在  与  之间，透明度为 。在  与  之间，透明度由  变化到 。在  之后，透明度为 。当 \\fade 只有两个参数时，其效果与 \\fad 一致。当一行中有多个 \\fad 或 \\fade 时，以第一个为准。\n[i]clip(,,,)定义一个矩形，只有在该矩形范围内的内容可见或不可见。, 为矩形的左上角，, 为矩形的右下角。\\clip 是矩形范围内可见，\\iclip 是矩形范围内不可见。当一行中有多个 [i]clip 时，以最后一个为准。\n[i]clip([&lt;等级&gt;,]&lt;绘图命令&gt;)定义一个绘画图形，只有在该绘画图形范围内的内容可见或不可见。&lt;等级&gt; 和 &lt;绘图命令&gt; 的含义与 \\p 相同。\n\\p&lt;等级&gt;进入绘图模式且同时指定坐标的缩小等级。缩小等级由此式计算：pow(2, &lt;等级&gt; - 1)。例如，\\p4，pow(2, 4 - 1) &#x3D; 8，即将原坐标缩小至 1&#x2F;8。当 &lt;等级&gt; 为 0 时，表示退出绘图模式，之后的文本按普通的解析。绘图命令是写在 {\\p&lt;等级&gt;} 大括号外面的部分。例如，{\\p1}m 0 0 l 0 100 l 100 100 l 100 0 l 0 0{\\p0}。而 [i]clip 代码中的绘图命令是写在 clip 之后的括号里的。例如，{\\clip(4, m 0 0 l 0 100 l 100 100 l 100 0 l 0 0)}绘图命令在括号里。\n以下列举了所有绘图命令：\nm  将当前绘制点移至 ,，同时闭合已有的图形，即开始绘制新图形。所有绘图都应由该命令开头。n  将当前绘制点移至 ,，同时不闭合已有的图形。l  在当前绘制点和 , 之间画一条直线，并把当前绘制点设置为 ,，即从这个点继续之后的绘图。b      在当前绘制点和 , 之间画一条三次贝塞尔曲线，并把当前绘制点设置为 ,，即从这个点继续之后的绘图。其中 , 和 , 为该贝塞尔曲线的控制点。s       …  在当前绘制点和 , 之间画一条三次均匀 B样条，并把当前绘制点设置为 ,，即从这个点继续之后的绘图。至少包含三个坐标。p  延长 B样条到 ,。例如，m 0 0 s 100 0 100 100 0 100 p 0 0 相当于 m 0 0 s 100 0 100 100 0 100 0 0。c闭合的 B样条曲线。例如，m 0 0 s 100 0 100 100 0 100 c，这里的 c 就相当于 p 0 0 100 0 100 100。以下是绘图命令的注意事项：\n除了在 [i]clip 中，绘图命令必须被包含在 {\\p&lt;等级&gt;} 和 {\\p0} 之间。所有绘图都应由 m   命令开头。所有图形最后必须闭合。所有没闭合的图形会被自动地在起点和终点之间添加直线来闭合。如果一个对话行中的多个图形有重叠，重叠部分会进行异或运算。如果多个相同的命令连在一起，可以把之后的命令符省略，只保留坐标。例如，l 100 100 l 200 200 可以写成 l 100 100 200 200。但是 s 命令不能省略，省略的话会导致绘制出不同的图形。图形的坐标系是相对于当前基线位置（\\pbo）和对齐（Alignment）模式。\\pbo设置图形的基线偏移值。默认情况下所有图形都是基于当前的基线，该命令可以将图形相对于基线上移或下移。 小于 0 时上移，大于 0 时下移。\n5. [Fonts] 与 [Graphics] 部分5.1 [Fonts] 部分Fonts 可以在 SSA 文件中嵌入经过 UUEncoding 编码为文本的字体文件，但只支持嵌入 TrueType 字体（即 .ttf 文件），每个嵌入的字体文件以单行如下格式开头：\nfontname: &lt;字体名称&gt;_[B][I]&lt;字体字符集&gt;.ttf\n\n其详解如下：\n\nfontname 必须小写，大写可能会被认为是字体文本编码的一部分；\n&lt;字体名称&gt;_[B][I]&lt;字体字符集&gt;.ttf 是 SSA 在保存字体文件时所用的文件名，其中 &lt;字体名称&gt; 就是原 TrueType 字体名，B 表示粗体，I 表示斜体，这两个值为可选项，&lt;字体字符集&gt; 是一个表示字体编码（字符集）的数字，最后加上字体格式后缀 .ttf。例如：fontname: chaucer_B0.ttf，&#96;fontname: comic_0.ttf；\nfontname: &lt;字体名称&gt;_[B][I]&lt;字体字符集&gt;.ttf 之后是一些可打印的字符组成的行，代表组成该字体文件的二进制值，每一行有 80 个字符，最后一行可能会短一点；\n从二进制转换到可打印字符使用 Uuencoding 方式；\n\n5.2 [Graphics] 部分Graphics 可以在 SSA 文件中嵌入经过 UUEncoding 编码为文本的图片文件，二进制图像文件以文本编码是低效的，但可以保证 SSA 脚本可以被任何文本编辑器处理。每个嵌入的图像文件以单行如下格式开头：\nfilename: &lt;文件名&gt;\n\n其详解如下：\n\nfontname 必须小写，大写可能会被认为是字体文本编码的一部分；\n&lt;文件名&gt; 是 SSA 在保存图像文件时所用的文件名，与 [Events] 事件部分中提及的图片名称一致；\nSSA 会把脚本中找到的任何文件保存到 SSA 的程序目录中的Pictures子目录中。例如：C: \\ Program Files \\ Sub Station Alpha v4.00 \\ Pictures 。SSA 会试图先从脚本指定的路径去加载文件，没有找到时就会到 Pictures 这个子目录里去找；\nfilename: &lt;文件名&gt; 之后是一些可打印的字符组成的行，代表组成该图像文件的二进制值，格式和内嵌字体文件相同；\n\n5.3 UUEncoding 编码细节SSA 中实现字体文件和图片文件的嵌入采用的是 UUEncoding 编码形式。\nUUEncoding 编码从二进制文件中一次取 3 字节，然后把这 3 字节的 24 位转换为 4 个 6 位的数字，把这 4 个数字都加上 33，再把这 4 个数字所对应的 ASCII 字符写入脚本文件。每一行有 80 个字符，除了最后一行可能会短一点。\n加上 33 的偏移意味着在编码后的输出中不会出现小写字符，这也是 fontname 行要小写的原因。\n如果被编码的文件的长度不是 3 的倍数，那么，如果文件长度是奇数，最后一个字节将乘十六进制的 100，然后得到的数字最多 12 位将按上述过程转换为 2 个字符；如果文件长度是偶数，最后一个字节将乘十六进制的 10000，然后得到的数字最多 18 位将按上述过程转换为 3 个字符。\n内嵌文件中没有终止符。如果后面有新的章节名，或者有另一个内嵌文件行，或者已经到脚本的最后了，那么该内嵌文件就被认为已经完成了\n6. ASS 字幕实例"},{"url":"/2024/01/27/FFmpeg%E5%AA%92%E4%BD%93%E5%A4%84%E7%90%86%E5%9F%BA%E7%A1%80/","content":"1. FFmpeg 相关概念1.1 FFmpeg 软件内容编译好的 FFmpeg 软件通常包含以下文件夹：bin ：包括 ffmpeg.exe（音视频转码、转换器），ffplay.exe（音视频播放器），ffprobe.exe（流媒体服务器）三个程序本体；doc ：可以理解为 FFmpeg 的说明书；licences ：所有 FFmpeg 用到的函数库的使用协议；presets ：FFmpeg 中 LibVPX 库用到的一些预设；\n1.2 FFmpeg 运行方式方法一：\n\n在 bin 目录下，按下鼠标右键（或按住 Shift 键然后按下鼠标右键）；\n选择并点击右键菜单中 在此处打开Powershell窗口 或 在终端中打开 等类型选项，即可打开命令窗口；\n\n方法二：\n\n在 bin 目录下，在文件管理器地址栏中输入 cmd 并回车，即可打开命令窗口；\n\n1.3 FFmpeg 使用格式FFmpeg 命令的典型语法如下，大致可以分为五个部分：\nffmpeg [全局参数] [输入文件参数] -i [输入文件] [输出文件参数] [输出文件]\n\n参数太多的时候，为了便于查看，ffmpeg 命令可以写成多行：\nffmpeg \\[全局参数] \\[输入文件参数] \\-i [输入文件] \\[输出文件参数] \\[输出文件]\n\n下面是一个例子：\nffmpeg \\-y \\ # 全局参数-c:a libfdk_aac -c:v libx264 \\ # 输入文件参数-i input.mp4 \\ # 输入文件-c:v libvpx-vp9 -c:a libvorbis \\ # 输出文件参数output.webm # 输出文件\n\n上面的命令将 mp4 文件转成 webm 文件，这两个都是容器格式。输入的 mp4 文件的音频编码格式是 aac，视频编码格式是 H.264；输出的 webm 文件的视频编码格式是 VP9，音频格式是 Vorbis。\n如果不指明编码格式，FFmpeg 会自己判断输入文件的编码。因此，上面的命令可以简单写成下面的样子：\nffmpeg -i input.avi output.mp4\n\n2. 媒体相关概念2.1 封装格式封装格式也叫容器格式，视频文件本身其实是一个容器（container），里面包括了视频和音频，也可能有字幕等其他内容。常见的封装格式有以下几种，一般来说，视频文件的后缀名反映了它的容器格式：\n\nMP4、MKV、WebM、AVI\n\n可以用以下命令查看 FFmpeg 支持的容器：\nffmpeg -formats\n\n2.2 编码格式视频和音频都需要经过编码，才能保存成文件。不同的编码格式（CODEC）有不同的压缩率，会导致文件大小和清晰度的差异。常用的视频编码格式如下：\n\nH.262、H.264、H.265、MPEG4、VP8、VP9、AV1\n\n其中 H.262、H.264、H.265、mpeg4 都是有版权的，但是可以免费使用，其他则是无版权的视频编码格式。\n常用的音频编码格式如下：\n\nMP3、AAC、AC-3、FLAC、VORBIS、OPUS\n\n上面所有编码格式都是有损的，编码后会损失一些细节，以换取压缩后较小的文件体积。无损的编码格式压缩出来的文件体积较大。\n可以用以下命令查看 FFmpeg 支持的编码格式，视频编码和音频编码都在内：\nffmpeg -codecs\n\n2.3 编码器编码器（encoders）是实现某种编码格式的库文件，只有安装了某种格式的编码器，才能实现该格式视频&#x2F;音频的编码和解码。\n以下是一些 FFmpeg 内置的视频编码器：\n\nlibx264：最流行的开源 H.264 编码器NVENC：基于 NVIDIA GPU 的 H.264 编码器libx265：开源的 HEVC 编码器libvpx：谷歌的 VP8 和 VP9 编码器libaom：AV1 编码器\n\n音频编码器如下：\n\nlibfdk-aac、aac\n\n可以用以下命令查看 FFmpeg 已安装的编码器：\nffmpeg -encoders\n\n3. 基本语法3.1 基本参数-i 即 input，指定输入文件-i + 输入文件名称/输入文件地址，如：-i input.mp4\n-f 即 format，设置输出文件格式-f + 文件格式，如：-f mp3\n-y 不经过确认，输出时直接覆盖同名文件\n-fs 设置输出文件的大小，超过指定大小时将结束转换\n-ss 设置输入文件开始转换的时间，单位是秒-ss + hh:mm:ss，如：-ss 00:05:20 或更精确的 -ss 00:05:20.66\n-to 设置输入文件转换结束的时间，单位是秒-to + hh:mm:ss，如：-to 00:05:20 或更精确的 -to 00:05:20.66\n-t 设置输入文件转换的时长，单位是秒-t + hh:mm:ss，如：-t 00:05:20 或更精确的 -t 00:05:20.66\n-title 设置标题\n-timestamp 设置时间戳\n-vsync 增减Frame使影音同步\n-c 指定输出文件的编码\n-metadata 更改输出文件的元数据\n-help 查看帮助信息\n\n3.2 音频参数-acodec 即 audio codec，设置音频编码器-acodec + copy/相应音频编码器，如 -acodec copy 或 -acodec libmp3lame不指定具体编码器时ffmpeg会根据后缀自动匹配编解码器，其中 copy 即保持原音频编码不变，libmp3lame 是 mp3 的编码器，表示用 mp3 编码器对音频进行编码，-acodec 也可以写作 -c:a\n-ac 即 audio channels，设置音频声道数-ac + 声道数，如：-ac 21 为单声道，2 为双声道立体声，默认使用原音频声道数\n-ar 即 audio rate，设置音频采样率-ar + 音频采样率，如 -ar 44100不指定具体采样率时默认原音频采样率\n-ab 即 audio byte，设置音频比特率-ab + 音频比特率，如 -ab 320k不指定具体比特率时默认128k\n-an 即 audio none，禁用音频，实际上就是剔除音频\n-vol 即 volume，设置音频音量-vol + 音量数值，如：-vol 100默认音量是 100% ，数值是 256，数值在 256 之下是把音量调低\n-aframes 4 设置音频的帧数\n-aq 4 audio quality设置音频质量\n-af ‘volume=2’ （audio filter）设置音频过滤器，这里将声音的值设为原来的二倍\n\n3.3 视频参数-vcodec 设置视频编码器\n-b 设置比特率\n-r 设置帧率\n-s 设置分辨率\n-aspect 设置宽高比\n-vf 设置视频过滤器\n\n3.4 其他参数-threads 设置使用的线程数\n\n-map 设置输入文件中的流\n\n4. FFmpeg 处理实例视频格式转换\nffmpeg -i input.flv -vcodec copy -acodec copy output.mp4或直接ffmpeg -i input.flv output.mp4批量处理for %i in (*.flv) do ffmpeg -i &quot;%i&quot; -c copy &quot;%~ni.mp4&quot;\n\n# 音频切割ffmpeg -i input.mp3 -ss 00:00:00.00 -to 00:05:20.00 -acodec copy output.mp3\n\n音频合并\nffmpeg -i &quot;concat: 123.mp3|234.mp3&quot; -acodec copy output.mp3\n\n音频淡出\nffmpeg -i input.mp3 -filter_complex afade=t=out:st=250:d=5 output.mp3\n\n从视频中提取音频\nffmpeg -i input.mp4 -f mp3 -vn output.mp3\n\n合并视频和音频\nffmpeg -i input.mp4 -i input.mp3 -vcodec copy -acodec copy output.mp4\n\n删除视频中音频\nffmpeg -i input.mp4 -c:v copy -an output.mp4\n\n替换原视频中音频\nffmpeg -i input.mp4 -i input.mp3 -c:v copy -c:a aac -strict experimental -map 0:v:0 -map 1:a:0 output.mp4\n\n烧录字幕文件为视频硬字幕\n# 输入视频格式可以根据实际需要进行更改# 烧录所有类型字幕，字幕格式可以根据需要修改ffmpeg -i input.mp4 -vf &quot;subtitles=input.srt:force_style=&#x27;FontName=Microsoft Yahei,Fontsize=27,PrimaryColour=&amp;H0000FFFF&#x27;&quot; output.mp4# 烧录ass字幕ffmpeg -i input.mp4 -vf ass=input.str output.mp4# 如果要设定烧录字幕样式，其格式如下ffmpeg -i input.mp4 -vf &quot;subtitles=input.srt:force_style=&#x27;FontName=MicrosoftYahei,Fontsize=27,PrimaryColour=&amp;H00FFFFFF&#x27;&quot; -c:a copy -preset fast -crf 22 output.mp4\n\n字幕文件格式互转\nffmpeg -i input.srt output.ass\n\n添加字幕文件到视频软字幕\nffmpeg -i input.mp4 -i input.ass -c copy output.mkv\n\n5. 参考FFmpeg - 维基百科\nffmpeg参数中文详细解释\n给新手的 20 多个 FFmpeg 命令示例\nFFmpeg 视频处理入门教程\n"},{"url":"/2024/01/27/Windows%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/","content":"1. 备份&#x2F;恢复Office激活信息打开以下目录：\nC:\\Windows\\System32\\spp\\store\\2.0\n\n\n\nWindows 中 Office 2013 版本及以上的激活信息即保存在该目录的 tokens.dat、cache.dat 两个文件中，只需要备份这两个文件，同时记住 Office 的激活密钥，下次安装Office的时候在同一位置恢复这两个文件就能恢复 Office 的激活状态。这个方法允许更换部分系统（Win8-Win11），但必须是同一台电脑。\n该目录中有还一个隐藏文件 data.dat，这个文件保存了 Windows 系统和 Office 两者的激活密钥，还原 data.dat、cache.dat 两个文件可以还原 Windows 的激活状态。但 Win10 和 Win11 都有数字激活了，这种备份激活信息已经没有意义。\n如果同时还原 data.dat、tokens.dat、cache.dat 三个文件，将无需输入 Office 的激活密钥，直接还原 Office 的激活状态，但同时也会还原 Windows 系统的激活状态，如果没有更换系统版本，这种方法是可以的，如果更换了系统版本，Windows容易出现“非核心的计算机上…”这类提示。\noffice 10 以下版本的激活信息与Windows激活信息互不影响，两个激活文件分别在以下路径，恢复到相同路径也可恢复激活状态\ntokens.dat：%ALLUSERSPROFILE%\\Microsoft\\OfficeSoftwareProtectionPlatformcache.dat：%ALLUSERSPROFILE%\\Microsoft\\OfficeSoftwareProtectionPlatform\\Cache\n\n以上操作均需在同一台电脑上操作，无论如何，激活Office后要牢记激活密钥并保存。\n2. 在Win11上使用IE 11浏览器打开以下目录：\nC:\\Program Files (x86)\\Internet Explorer\n\n将其中的 iexplore.exe 文件创建一个快捷方式并发送到桌面，右键该快捷方式，选择属性，在接下来的页面中，把目标一栏修改为如下内容：\n&quot;C:\\Program Files (x86)\\Internet Explorer\\iexplore.exe&quot; https://cn.bing.com/#ie=&#123;inputEncoding&#125;&amp;wd=%s -Embedding\n\n保存后点击此快捷方式，即可打开 IE 11。以上内容的 https://cn.bing.com/ 字段是浏览器打开后的首页，可自行定义。\n"},{"url":"/2024/01/27/TXT%E7%BD%91%E7%BB%9C%E5%B0%8F%E8%AF%B4%E6%A0%A1%E5%AF%B9/","content":"1. 校对名词解释1.1 校对版和精校版的区别1.1.1 校对版校对版小说指的是仅仅通过软件排版、改错、去广告、还原屏蔽字和乱码、精排章节的文本等，通常没有通读下来。\n也即，校对版&#x3D;软校\n1.1.2 精校版精校版小说指的是既经过软件校对，又经过边读边校。\n也即，精校版&#x3D;软校+读校\n其中，软件可以客观性的找到所有符合要求的错误，比如把一篇文章的所有阿拉伯数字改成汉字；人工在文本需主观判断的时候不可代替，比如逻辑错误，病句，主被动错误，人名错误的修改等等。\n1.2 精校版、校对版的审核标准1.2.1 校对版审核标准\n没有缺少、重复章节。\n无乱码、无屏蔽字（注：乱码和屏蔽字是要还原的，千万不能删除！否则就失去校对的意义了)\n没有广告信息、屏蔽字及乱码等，要通过 txtformat 里集成的常用正则表达式所有条目的排查（txtformat 仅用于文字校对，排查肯定不会彻底，推荐人工检查一下，新书也需随机挑前面、中间及后面的几个章节检查。)\n段首一定要是两个全角空格 ‘　　‘ ，这样符合中文语法，此外，标点为全角、字母和数字为半角、省略号和破折号为两个全角，不能多也不能少。\n简体汉语中的字母和数字应该使用半角，标点符号使用全角。\n简体汉语中数学符号使用半角，比如百分号 %，小数点 .，分数线 /，比号 : 等。四则运算符 + - * / =;\n段与段之间应该不空行或空一行，要统一;\n注意繁体中的引号 『』 对应简体中的 ‘’；而 「」 对应 “”;\n文字的数字用法要统一，不要前面都是18岁，200人，后面变为二十六岁，八百五十人。\n无错误分段换行现象。（可以使用emeditor查找和解决)\n引号匹配问题尽量修正。（见emeditor用法了，但相比于以上几条必须解决的，本条就不那样严格了，因为书籍越长，修正全部引号匹配问题就越难。如果书中此问题不多，就需全部修改，如果问题过多且文本较长，则尽量修改即可。)\ntxtformat 里面的查找错别字和 的地得 两项，正版文本可以不要求，盗版文本尽量查一下，因为二次传播或OCR后可能会引入很多新的错误，通过查找可以最大限度改正。\n\n1.2.2 精校版审核标准校对版的前十条标准不变，第11条的引号问题必须修正，第12条的错别字和 的地得 必须查。最重要的是，必须要全篇通读修改。\n2. 正则表达式在文本校对中的应用\n逻辑与（字符范围内)：[]表示查找中括号内任意字符，比如正则查找 [卷章回]，就表示匹配包含卷、章、回三个字中任意一个字的内容。\n逻辑或：|顾名思义，比如正则查找阡陌|河洛|文心，就是三组字词中任意一组都可以搜索到。会找到阡陌、河洛和文心这三个词。\n逻辑非(字符范围外)：[^]和第一个正好相反，就是除了中括号内的字符才可查找，比如 [^卷章回]，是指匹配这三个字以外的任意字符。\n回车换行符：\\r\\n（其中 \\n 是换行符，\\r 是回车符）\\n 和 \\r 在实际应用中通常组合出现，通常我们用的各种工具的排版功能都是本条正则灵活使用的结果:比如去除所有空行就是反复正则替换 \\r\\n\\r\\n 为 \\r\\n；行间加一空行则是 \\r\\n 替换为 \\r\\n\\r\\n；行首加两全角空格是 \\r\\n 替换为 &#39;\\r\\n　　&#39; 等。)\n任意字符：.顾名思义，可以匹配任意内容，包括空字符。\n匹配开始：~即正则表达式匹配语句的开始。\n匹配结束：$即正则表达式匹配语句的结束。\n重复至少零次：*显然了，.* 连用就是任意字符重复任意次数，即可引申表达任意内容，另注 .* 不要和　\\r\\n 一起使用。\n重复至少一次：+.+ 和 .* 的意义是一样的，不过 .+ 可以和 \\r\\n 一起使用。\n重复零次或一次：?\n标记表达式语句：()正则表达式中标上括号本身是不会影响语句功能的，加括号为的是替换功能。从左至右，正则搜索语句中的第一个括号所引用语句为语句1，第二个为语句2，以此类推。\n所有查找内容：\\0指代搜索项里面所有内容。\n标记表达式：\\1 \\2 \\3 ………配合第11条，第一个括号对应 \\1，第二个对应 \\2 以此类推。\n数字：\\d匹配0-9所有数字，\\d+ 表示匹配任意长度字符串，不过一般用 [0-9]+ 代替，操作和变形更灵活。比如 [0-9a-z]+ 就是任意字母数字串。\n重复：&#123; &#125;&#123;n&#125; 指重复n次,比如 [a-zA-Z]&#123;3&#125; 指任意三个字母连用的串;&#123;n,&#125; 指重复至少n次，比如[0-9]&#123;4,&#125; 可以指任意大于等于一千的数，当然，如果你写上0123也能匹配上;&#123;n,m&#125;指重复次数大于等于n，小于等于m。\n转义：\\以上所提语句都有各自的特殊符号表示含义，当需要查找他们的本身而不是其所代表的含义时，需要用到转义符 \\，即在该符号前面加 \\ 即可。比如正则直接搜索 * 会报错，搜索 \\* 就可以了。以上几条其实已经把 \\ 的功能表示出来了，比如 \\d，\\r，\\n 等已经不代表字母的本身了，实际上还有很多字母加 \\ 也会有别的含义，比如 \\t 代表制表符。\n汉字的正则表达式汉字的正则表达式比较常用，用两种形式皆可：[\\x&#123;4e00&#125;-\\x&#123;9fa5&#125;] 或 [\\u4e00-\\u9fa5]。\n\n需要注意的是，正则是搜索项而不是替换项，替换项只能是常规内容或是第13条那样的，正则符号如果写在替换项，那么符号本身是什么,就会被替换成什么。\n比如某本书的章节目录为：第一卷 斗破苍穹 第0001章 陨落的天才那么就可以这样匹配：第[一二三四五六七八九十零百千]+卷 .* 第[0-9]+章 .*\n3. 章节标题的校对章节标题的校对指的是为了文本的易读，统一并规范同一文本中的标题格式。\n3.1 章节序号格式的修改章节校对中，应保持章节标题中章节序号格式的统一，通常有以下几个校对点：\n\n章节序号数字格式不统一，如果同一文本中存在 第123章、第一二三章、第一百二十三章、第壹贰叁章 等各种序号格式混用的情况，需要将这些不同的序号转换为同一种数字格式，即各类型章节序号的互转；\n章节序号缺少量词，如章节序号 一二三、第一二三、一二三章 等情况，需要补全章节量词；\n尽量保证章节序号中仅有汉字和数字，删去所有其他序号类型（如③、⑶、Ⅲ等）和标点符号（如括号等），如果碰到不常见的章节序号形式，如 逐鹿卷之十二，也应保证统一文本章节序号格式统一；\n章节序号与名称间缺少空格，章节序号和章节名之间应用一个半角空格连接，如：第一章陨落的天才 应改成 第0001章 陨落的天才；\n章节标题需顶格；\n\n相关的正则表达式如下：\n// 匹配章节名(第)([―－\\-─—壹贰叁肆伍陆柒捌玖一二两三四五六七八九十○零百千O0-9０-９]&#123;1,12&#125;)([章节節回集卷部篇])// 在章节序号与名称间添加空格搜索项：(第[一二三四五六七八九十零百千]+卷)(.+)(第[一二三四五六七八九十零百千]+章)(.+)替换项：\\1 \\2 \\3 \\4\n\n3.2 章节计数错误（章节重排）章节计数错误即如第三章后就是第五章，中间缺了第四章，或者第三章后跟了两章内容不同的第四章这类问题，这种情况可直接重排章节计数，其JS脚本如下：\nvar n = 1var found = 1while (found == 1)&#123;\tfound=document.selection.Replace(&quot;　　第.+章 &quot;,&quot;　　第&quot;+n+&quot;章 &quot;,eeFindReplaceRegExp);\tn++;&#125;// &quot;　　第.+章 &quot;这段正则表达式既表示用脚本匹配 `行首两个全角空格＋第任意章＋一个半角空格` 的章节序号\n\n\n该脚本默认的章节量词为章，如果文本的章节量词不是章，修改脚本为对应的章节量词即可;\n\n这样的正则形式是考虑到大部分小说的章节名是 序号 名称，如 第三章 XXXX 这种形式，若有章节名仅有序号，如 第三章 这种形式，是不会被匹配出来的，这时需要单独用正则表达式把这些章节找出来，手动在章节序号后面加上一个半角空格，匹配的正则表达式为 章\\r\\n，\n\n此脚本重排后，章节序号为阿拉伯数字，如需转换成汉字，参见章节校对篇即可；\n\n此脚本会从头至尾重排章节，但是有的小说是每一卷重新计数的，有时候不想改变这种形式，这时可以按卷切割一下文本，然后分别处理即可。\n\n\n附：按卷切割文本通常有两种方法：　　①使用txtformat按章节切割txt，然后用txt合成器按卷合成txt。　　②使用mybookmaker导入txt，做好后转入umd炮手，然后把每一卷都独立另存为一个umd，然后用txtformat把这几个umd分别转换成txt。（推荐）\n3.5 分章节标号格式不同小说中有时会把一章剧情连贯的长章节分为若干短章节，比如 第一章 陨落的天才（上）、第二章 陨落的天才（下）……第八章 斗气大陆（一）、……、第十章 斗气大陆（三），这时会用 （上） （中） （下）、（一） （二） （三） 等放在相同的章节名后作为标号，就需要统一这些标号的形式。\n这里的统一不是说同一文本只能用 （上） （中） （下） 或只能用 （一） （二） （三），而是不要出现 （上） 和 （二） 、（一） 和 （下） 这种搭配；但是有的文本前面大章拆成两章用的是 （上） （下），后面拆成两章却改用 （一） （二），这样情况的是需要统一的。如果同一文本前面使用 （上） （下），后面使用 （一） （二） （三），那么是否需要统一就没有强制要求了。\n3.6 统一章节序号位数当出现在同一文本中存在 第1章、第11章、第111章 这种不同位数的章节序号时，可以在序号前加上相应的0，使得位数统一，变为 第001章、第011章、第111章 这种形式。\n统一后的位数应与文本中原本章节序号位数最多的相同，如该文本共有999章，那就将章节序号全部统一为三位数 第001章、第011章，如该文本共有1234章，那就将章节序号全部统一为四位数 第0001章、第0011章、第0111章。\n相关的JS脚本如下：\n// 第1章 → 第001章var title=prompt(&quot;请添加需要的章节量词，或删除不需要的。&quot;,&quot;[集册部卷章节回]&quot;)if (title!=&quot;&quot;)&#123;\tdocument.selection.Replace(&quot;第([0-9]&#123;1,2&#125;)O(&quot;+title+&quot;)&quot;,&quot;第\\\\10\\\\2&quot;,nFlags);\tdocument.selection.Replace(&quot;第([0-9])O([0-9])(&quot;+title+&quot;)&quot;,&quot;第\\\\10\\\\2\\\\3&quot;,nFlags);var num=5while(num)&#123;\tnum--;\tdocument.selection.Replace(&quot;第(\\\\d)(&quot;+title+&quot;)&quot;,&quot;第00\\\\1\\\\2&quot;,nFlags);\tdocument.selection.Replace(&quot;第(\\\\d\\\\d)(&quot;+title+&quot;)&quot;,&quot;第0\\\\1\\\\2&quot;,nFlags);&#125;&#125;break;\n\n当章节序号为中文第一二三章这种类型时，亦可在章节序号加〇使得位数相同，将上述JS脚本中的 [0-9] 替换为 [一二三四五六七八九〇] 即可。\n3.7 章节名重复如果存在不同内容的章节章节名重复的情况，可用以下正则表达式查找并替换重复章节名：\n// 查找章节名(第)([―－\\-─—壹贰叁肆伍陆柒捌玖一二两三四五六七八九十○零百千O0-9０-９]&#123;1,12&#125;)([章节節回集卷部篇])// 查找重复的章节名搜索项：(第[―－\\-─—壹贰叁肆伍陆柒捌玖一二两三四五六七八九十○零百千O0-9０-９]&#123;1,12&#125;[章节節回集卷部篇])( )?(.&#123;0,80&#125;)\\r\\n.*?(\\r\\n.*?)&#123;0,5&#125;([ 　\\t]+)?\\1\\3\\r\\n替换项：$1$2$3\\r\\n\n\n4. 正文的校对4.1 无关内容的修改这里的无关内容指以下几种情况：\n\n乱码；\n广告；\n网址；\n章节开头的更新时间和章节字数；\n带 PS 的开头，通常这段为作者的话；\n各种括号内的内容，通常这段内容也与正文无关；\n\n这一部分的校对主要是用正则表达式查找出这些和正文无关的内容，有些内容可以直接替换，有些内容最好进行人工判断后再保留有关内容，删除无关内容。对于第 5 项和第 6 项的内容，如果前面的步骤中查完 广告 和 字母串，那这两项查找作用也就有限了。\n相关的正则表达式如下：\n// 查找含有PS的行(?&lt;![gGqＧｇ])[ＰｐPp][SsＳｓ](?![ＰｐPp]).*?\\r\\n// 查找各种括号括起来的内容[\\(\\[\\&#123;\\&lt;《〈﹛〔（［≤＜〖].*?[〗＞≥］）〕﹜〉》\\&gt;\\&#125;\\]\\)]|[\\(（][\\s\\S]*?[\\)）]// 查找【】括起来的内容，一般小说对【】的使用比较特殊，所以单独列出【】括起来的内容\n\n4.2 标点&#x2F;数字&#x2F;字母&#x2F;符号的修改此项修改主要是规范标点、数字、字母、数学符号的全半角状态。所谓半角即占1个标准字符位置，如英文状态下的标点 ,.?!，而全角即占2个标准字符位置，如中文状态下的标点 ，。？！。数字、字母、空格、数学符号、标点等都是有全角半角之分的，如：\n\n\n\n\n全角符号\n半角符号\n\n\n\n标点符号\n，。？！；：【】｛｝\n,.?!;:[]{}\n\n\n数字\n０１２３４５６７８９\n0123456789\n\n\n字母\nａｂｃｄｅｆｇ\nabcdefg\n\n\n空格\n‘　‘\n‘ ‘\n\n\n数学符号\n＆＋－＊／％\n&amp;+-*/%\n\n\n我们应根据具体的文本情况判断符号为哪种形式，一般有以下几个校对点：\n\n简体汉语中，字母和数字应为半角；\n简体汉语中，标点符号应为全角，其中省略号 …… 和破折号 —— 为两个全角，且不能拆开使用一半；\n简体汉语中，数学符号应为半角，如百分号 %、小数点 .、分数线 /、比号 : 、四则运算符 + - * / =；\n段首空格应为两个全角空格 &#39;　　&#39; ；\n繁体中的引号 『』 对应简体中的 ‘’，「」 对应 “”；\n\n相关的正则表达式如下：\n// 查找半角标点/数字/字母\\.\\.\\.\\.\\.\\.|\\.\\.\\.|(?![0-9０-９])\\x2e(?![0-9０-９])|[(\\x2f|\\x2b-\\x2d)|(\\x21-\\x29)|(\\x3a-\\x40)|(\\x5b-\\x60)|(\\x7b-\\x7e)]\n\n4.3 繁体字&#x2F;叠字&#x2F;叠词的查找此项修改即查找文本中的繁体字、叠字、叠词。\n对于繁体字，能查找到的仅是正则表达式中预设的繁体字（预设可以根据需要增删），以下几种情况可以选择保留繁体字：\n\n文本中出现的古文和古代地名、人名、年号等专有名词，应当保留繁体字；\n作者因情节需要在技能、招式、设定中特意使用的繁体字应当保留；\n软件中有几个繁体转简体的是有问题的，比如蹚转趟，这类情况也应当保留繁体字；\n\n对于叠字叠词，正则表达式将会找出所有的叠字、叠词，而这些叠字、叠词是否是重复输入造成的错误需要人工判断，因此进行此项查找时切勿批量修改，一般情况下，叠字出现的错误较多，叠词出现的错误较少。\n相关的正则表达式如下：\n// 查找繁体字，该项的查找主要是在正则表达式中预设一些繁体字情况，在此隐去。// 查找叠字，该项的查找主要是在正则表达式中预设一些叠字情况，在此隐去。// 查找叠词(([\\x4e00-\\x9fa5])?([\\x4e00-\\x9fa5])?([\\x4e00-\\x9fa5])?([\\x4e00-\\x9fa5])?[\\x4e00-\\x9fa5][\\x4e00-\\x9fa5])\\1\n\n4.4 字母串&#x2F;数字串&#x2F;拼音串的修改此项修改用于查找文本中不符合规范或被屏蔽成符号、拼音的内容，一般有以下几个校对点：\n\n全角数字，前面说过，文本中数字一般为半角字符，所以要查找并修改所有的全角数字；\nOCR识别错误的文本，OCR识别文本时，可能会把 ！ 识别为 1，把 ？ 识别为 7，数字 0 和大写字母 O 也经常混淆；\n被屏蔽成符号、拼音的内容，有些平台会把一些文本屏蔽成字母或拼音，这类情况也必须替换为相应中文；\n\n此外，如果存在以下情况，可选择不作修改：\n\n一些约定俗成的字母串或数字串，比如886、TMD、YY等，可以根据文章实际保留；\n数据流小说中可能会出现大量的数字，可以酌情查找；\n一些小说作者自己把文本中的内容（脏话等）打成 * 号，这种情况可以直接保留；\n\n对于字母串、数字串、拼音串的查找修改，建议的顺序是先查数字串，然后查拼音串，最后查字母串，可以通过查找和修改拼音大大减少查找字母串的工作量。\n相关的正则表达式如下：\n// 查找数字串(?&lt;!第)(?&lt;![0-9０-９])([0-9０-９]+)(?![0-9０-９])(?![章节])// 查找拼音，该项的查找主要是在正则表达式中预设一些叠字情况，在此隐去。// 查找字母串([a-zA-ZāáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜüêɑńňɡＡ-Ｚａ-ｚΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩαβγδεζηθικλμνξοπρστυφχψωАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюяёあいうえおかきくけこさしすせそたちつてとなにぬねのはひふへほまみむめもやゆよらりるれろわを]+)\n\n4.5 引号&#x2F;括号等成对符号的修改此项修改用于查找引号、括号等这些成对存在的符号，有以下几个校对点：\n\n引号&#x2F;括号未匹配，即句子中漏掉前引号&#x2F;括号或后引号&#x2F;括号等；\n引号&#x2F;括号用反，即该用前引号&#x2F;括号的时候用了后引号&#x2F;括号或者该用后引号&#x2F;括号的时候用了前引号&#x2F;括号；\n单双引号使用错误（双引号嵌套），正常的语法是双引号中再次引用需要换成单引号，单引号中再再次引用就又需要换成双引号，总而言之就是单双交替出现，很多文本会出现都使用双引号，形成嵌套的问题，需要查找修改；\n使用繁体版引号，如 『』 「」，在非繁体文本中使用繁体引号会造成阅读不变，可用软件分别替换成左右引号 ‘’ “”；\n\n此外，还有一种特殊的引号匹配问题，当引号内的内容（比如人物语言）较多时，排版上往往会对引号内的内容进行分段，如：\n\t小明说：“今天天气真好啊，今天天气真好啊，今天天气真好啊。\t你觉得呢？你觉得呢？你觉得呢？你觉得呢？你觉得呢？你觉得呢？”或者\t小明说：“今天天气真好啊，今天天气真好啊，今天天气真好啊。\t“你觉得呢？你觉得呢？你觉得呢？你觉得呢？你觉得呢？\t“我们出去玩怎么样？我们出去玩怎么样？我们出去玩怎么样？”\n\n这两种形式在使用规范上并没有错误，可不进行修改，另外，还有一种硬回车错误引起的错误，如：\n小明说：“今天天气真好啊，今天天气真好啊。你觉得呢？”\n\n很明显这里引号使用是正确的，但多了一个不该有的回车，应当直接删去硬回车，而无需更改引号。\n相关的双引号的正则表达式如下：\n// 查找引号不匹配\\&quot;.*?\\&quot;|“.*?[^”]\\&quot;|\\&quot;.*?”|(?:(?&lt;=[：:]))?“[^”“]&#123;0,&#125;(\\n)[^”“]&#123;0,&#125;”|^(?:[　 \\n\\t]+)?[’”]|[‘“][^”“’‘&#x27;&quot;\\n]&#123;0,&#125;$|[：:][’”&#x27;&quot;]|”[^“”\\n]&#123;0,&#125;”|“[^”“‘\\n]*?[’&#x27;&quot;]|‘[^’‘“\\n]*?[”&#x27;&quot;]|[“‘]$|[’&#x27;][^‘’&#x27;\\n]&#123;0,&#125;[’&#x27;]|‘[^’‘\\n]&#123;0,&#125;‘|“[^”“\\n]&#123;0,&#125;“(?!.*”)|“[^”“\\n]&#123;0,&#125;“|‘[^’‘\\n]&#123;0,&#125;“|”[^“‘\\n]&#123;0,&#125;’|“[^”“\\n]&#123;0,&#125;[‘’]+(?!.*?”)|(?=[^“\\n]*)”[\\x4e00-\\x9fa5]&#123;1,&#125;“(?=[^”\\n]*$)|(?=[^‘\\n]*)’[\\x4e00-\\x9fa5]&#123;1,&#125;‘(?=[^’\\n]*$)|”[^“”\\n]&#123;0,&#125;”|(?&lt;=[：:])”[^”：:\\n]*?“|(?&lt;=[：:])‘[^’：:\\n]*?’|(?=[^“\\n]*)”[^\\n“”]&#123;0,256&#125;”|^[^\\n‘“]*[”’]|‘[^’\\n]*&#x27;|(?&lt;=\\n)[^“\\n]&#123;0,&#125;[&#x27;”]// 查找嵌套的双引号搜索项：(?&lt;=“[^\\n”]&#123;0,4096&#125;)(“)([\\x4e00-\\x9fa5，。、！0-9a-zA-Z\\(\\)（）\\*\\[\\]]&#123;1,4096&#125;)(”)(?=[^\\n”]&#123;0,4096&#125;”)替换项：‘$2’// 查找不匹配的括号）[^（\\n]*）|（([^）\\n])+\\(\\n|（\\)|》[^\\n《]*》|《([^\\n》])+\\(\\n|《\\)|】[^\\n【]*】|【([^\\n】])+\\(\\n|【\\)|〗[^\\n〖]*〗|〖([^\\n〗])+\\(\\n|〖\\)|≥[^\\n≤]*≥|≤([^\\n≥])+\\(\\n|≤\\)|〉[^\\n〈]*〉|〈([^\\n〉])+\\(\\n|〈\\)|』[^\\n『]*』|『([^\\n』])+\\(\\n|『\\)|」[^\\n「]*」|「([^\\n」])+\\(\\n|「\\)|＞[^\\n＜]*＞|＜([^\\n＞])+\\(\\n|＜\\)|］[^\\n［]*］|［([^\\n］])+\\(\\n|［\\)|\\&#125;[^\\n&#123;].*?\\&#125;|\\&#123;([^\\n\\&#125;])+\\(\\n|\\&#123;\\)|\\)[^\\n(]*\\)|\\(([^\\n\\)])+\\(\\n|\\(\\)|\\][^\\n\\[]*\\]|\\[([^\\n\\]])+\\(\\n|\\[\\)|&gt;[^\\n&lt;]*&gt;|&lt;([^\\n\\&gt;])+\\(\\n|\\&lt;\\)|《[^\\n》]*《|^[^\\n《]*》|《[^\\n》]*\\n|（[^\\n）\\n]*（|^[^\\n（]*）|（[^\\n）]*\\n|【[^\\n】]*【|^[^\\n【]*】|【[^\\n】]*\\n|〖[^\\n〗]*〖|^[^\\n〖]*〗|〖[^\\n〗]*\\n|≤[^\\n≥]*≤|^[^\\n≤]*≥|≤[^\\n≥]*\\n|〈[^\\n〉]*〈|^[^\\n〈]*〉|〈[^\\n〉]*\\n|『[^\\n』]*『|^[^\\n『]*』|『[^\\n』]*\\n|「[^\\n」]*「|^[^\\n「]*」|「[^\\n」]*\\n|＜[^\\n＞]*＜|^[^\\n＜]*＞|＜[^\\n＞]*\\n|［[^\\n］]*［|^[^\\n［]*］|［[^\\n］]*\\n|\\&#123;[^\\n\\&#125;]*\\&#123;|^[^\\n\\&#123;]*\\&#125;|\\&#123;[^\\n&#125;]*\\n|\\([^\\n\\)]*\\(|^[^\\n\\(]*\\)|\\([^\\n\\)]*\\n|\\[[^\\n\\]]*\\[|^[^\\n\\[]*\\]|\\[[^\\n\\]]*\\n|&lt;[^\\n&gt;]*&lt;|^[^\\n&lt;]*&gt;|《》|【】|（）|〖〗|〈〉|≤≥|＜＞|［］|『』|「」|\\(\\)|\\&#123;\\&#125;|\\[\\]|&lt;&gt;|&lt;[^\\n&gt;]*\\n|^(?!.*?\\[)(?=.*?\\]).*\\n|^(?!.*?\\])(?=.*?\\[).*\\n|^(?!.*?】)(?=.*?【).*\\n|^(?!.*?【)(?=.*?】).*\\n|^(?!.*?》)(?=.*?《).*\\n|^(?!.*?《)(?=.*?》).*\\n^(?!.*?\\&#123;)(?=.*?\\&#125;).*\\n|^(?!.*?\\&#125;)(?=.*?\\&#123;).*\\n|^(?!.*?\\()(?=.*?\\)).*\\n|^(?!.*?\\))(?=.*?\\().*\\n|^(?!.*?\\&lt;)(?=.*?\\&gt;).*\\n|^(?!.*?\\&gt;)(?=.*?\\&lt;).*\\n|^(?!.*?〈)(?=.*?〉).*\\n|^(?!.*?〉)(?=.*?〈).*\\n|^(?!.*?﹛)(?=.*?﹜).*\\n|^(?!.*?﹜)(?=.*?﹛).*\\n|^(?!.*?〔)(?=.*?〕).*\\n|^(?!.*?〕)(?=.*?〔).*\\n|^(?!.*?（)(?=.*?）).*\\n|^(?!.*?）)(?=.*?（).*\\n|^(?!.*?［)(?=.*?］).*\\n|^(?!.*?］)(?=.*?［).*\\n|^(?!.*?≤)(?=.*?≥).*\\n|^(?!.*?≥)(?=.*?≤).*\\n|^(?!.*?＜)(?=.*?＞).*\\n|^(?!.*?＞)(?=.*?＜).*\\n|^(?!.*?〖)(?=.*?〗).*\\n|^(?!.*?〗)(?=.*?〖).*\\n|^(?!.*?『)(?=.*?』).*\\n|^(?!.*?』)(?=.*?『).*\\n|^(?!.*?「)(?=.*?」).*\\n|^(?!.*?」)(?=.*?「).*\\n\n\n4.6 硬回车&#x2F;空行的修改所谓的硬回车指文本在不该回车的时候出现了回车，即段尾以逗号、顿号或者汉字等结尾。如：\n小明说：“今天天气真好啊，你觉得呢？”\n\n很明显，这个文本情况下并不应该出现回车，就应该查找并删去这些硬回车。硬回车一般有以下几种情况：\n\n标点错误，如本该是句号的地方打成了逗号；\n标点缺失，如本该有句号的地方没加上\n句子中断，句子中断有两种情况，既可能是缺字缺句引起的中断，另一种也可能是作者故意留下的中断，要注意甄别；\n\n错误的硬回车需要删去，但如果存在以下情况的硬回车可以选择保留：\n\n文本中出现诗歌、歌词，即使段尾是逗号也可以保留硬回车；\n作者因情节需要故意在此中断句子时，应当保留硬回车；\n情节中的空间转换，作者标注了地名之类，应当保留硬回车；\n\n也正是因为硬回车出现的情况较为复杂，所以在查找到硬回车后应该人工判断决定是否保留，切勿批量修改。\n空行的修改主要是规范正文文本的排版格式，有以下几个校对点：\n\n章节标题与正文间、正文段与段之间不空行或空一行；\n章与章之间空两行或三行，即每个章节标题前有两行或三行的空行；\n\n相关的正则表达式如下：\n// 查找硬回车(?&lt;=\\n)(?!.*第[壹贰叁肆伍陆柒捌玖一二两三四五六七八九十○零百千O0-9０-９]&#123;1,12&#125;(章|节|節|回|集|部|卷|篇)).*?[^\\]^&#125;^※^〕^:^：^》^】^;^；^.^。^？^?^”^&quot;^…^！^&#x27;^’^)^）^\\n^!^—^〗^\\-^─]&#123;2,&#125;$\n\n4.7 屏蔽字&#x2F;错别字&#x2F;的地得误用的修改此项修改的原理都是在正则表达式预设一些错误实例。\n值得注意的是屏蔽字的还原，校对过程中乱码和屏蔽字是必须要还原的，大部分网站是把屏蔽字替换为 * 号，可以尝试以下步骤把 * 号还原为文字：\n\n复制出带屏蔽字的一整句，并带将 * 号替换为空格；\n\n将替换后的整句粘贴到搜索引擎中查找原句；\n\n\n对于大部分网站来说，星号数量就是被屏蔽的字的数量，但也有例外，比如腾讯读书通常用两个 * 号表示一个字，起点则是经常把一些四字词语用一个 * 号代替。另外，因为一些原创网站的屏蔽字库越来越多，有的老小说盗版书源屏蔽字反而更少，可以适当参考。\n对于错别字和的地得误用这两种情况，正版文本非读校的校对版可以不作查找这两项的要求，错别字选项对于采用盗版或OCR手打的文本无论是不是读校版都是必查的，的地得误用大部分人阅读时都不敏感，所以不作强制要求，总之，精校的时候建议都要进行查找，存在争议的内容可以保持原样，但有错误的内容必须要修改。\n4.8 其他格式规范项的修改此项修改根据需要查找修改即可，这些规范项的正则表达式如下：\n// 查找干扰符(?![ ？！”’）｝。]+)[\\x01-\\x09\\x0b-\\x0c0x0e-\\xff％（）＋｀｛｝～‘’；：？，“”＿＄！。]&#123;8,&#125;(?&lt;![ \\r\\n“‘（｛])// 查找中文间的空格(?&lt;![\\r\\n 　\\t章节節回集卷文篇部])[ 　\\t]+(?![0-9a-zA-Z０-９Ａ-Ｚａ-ｚ 　\\t第])|(?&lt;![\\r\\n0-9a-zA-Z０-９Ａ-Ｚａ-ｚ 　\\t章节節回集卷文篇部])[ 　\\t]+(?!第)// 查找不常见特殊字符，该项的查找主要是在正则表达式中预设一些特殊字符，在此隐去。// 查找不规则的标点符号，该项主要查找那些不按规范使用的标点，如连用 句点. 代替 省略号……(?&lt;!…)…(?!…)|《[\\x4e00-\\x9fa5]+[。\\.][\\x4e00-\\x9fa5]+》|[﹑﹁﹂﹄﹃︵︶︻︼︰]|[…]&#123;3,&#125;|[。.]&#123;2,30&#125;|[．\\.。，\\,、·`]&#123;2,&#125;|…+[．\\.\\,、·`]+|[．\\.。，\\,、`]+…+[．\\.\\,、·`]+|““|””|‘‘|’’|：”|：’|&#x27;&#x27;|&quot;&quot;|(?&lt;=[ 　\\t\\n])[”’．\\.。，\\,、`]|：：|！？？|！。|？。|？！！|，？|。”[，！？]|，”(?!.*“)|、”|[ 　\\t]”// 查找错误断行造成的行首标点\\r\\n(?:\\r\\n)?(?:[ 　\\t]+)?([》&gt;\\)\\]\\&#125;’”，、,．\\.？?。！!;:；：])\n\n5. 其他校对技巧5.1 文本中重复段落的查找用软件 DupliFind 实现\n5.2 多文本比对选优用软件 beyond compare 实现\n"},{"url":"/2024/01/27/Windows%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/","content":"1. 应用程序无法启动，因为应用程序的并行配置不正确1.1 启用Windows Modules Installer服务\nWin+R 打开运行窗口，输入 services.msc 并回车，进入 服务页面；\n找到列表中的 Windows Modules Installer 服务，右键选择 属性；\n在之后弹出的页面中，启用类型 选择 手动，点击下方 启动 选项，使 服务状态 显示为 正在运行 ，最后点击 确定 即可。\n\n\n\n\n1.2 安装Microsoft Visual C++运行库在此页面下载运行库并安装，或直接下载**VisualCppRedist**，该软件会安装所有版本的Microsoft Visual C++运行库。\n2. 更改Win11右键菜单样式为Win10风格2.1 手动修改注册表\nWin + R 打开系统运行窗口，输入 regedit 并回车打开 注册表编辑器；\n在注册表中定位到 HKEY_CURRENT_USER \\ Software \\ Classes \\ CLSID 路径；\n右键 CLSID 键值，新建 项 并命名为 &#123;86ca1aa0-34aa-4e8b-a509-50c905bae2a2&#125;，再次右键这个新创建的项，新建 项 并命名为 InprocServer32；\n最后点击 InprocServer32 项，双击右侧窗格中名为 (默认) 的条目，什么内容都不需要输入，按下回车键即可。\n\n\n保存注册表后，还需重启 explorer.exe（Windows 资源管理器） ，步骤如下：\n\nCtrl + Shift + ESC 打开 任务管理器 ，点击左下角 详细信息；\n在显示出来的进程中往下滑动，找到 Windows 进程 一栏，在该栏中找到 Windows 资源管理器 进程，右键选择 重新启动 即可；\n\n重启后右键菜单就恢复成Win10样式了，相应的，删除注册表中添加的项，重启 Windows 资源管理器 即可恢复Win11右键菜单样式。\n\n2.2 cmd命令修改注册表Win + S 打开搜索栏，输入 cmd，搜索结果为 命令提示符，右键选择 以管理员身份运行，在打开的命令窗口粘贴以下命令并回车，即可自动在注册表创建相关项；\nreg.exe add “HKCU\\Software\\Classes\\CLSID\\&#123;86ca1aa0-34aa-4e8b-a509-50c905bae2a2&#125;\\InprocServer32” /f\n\n如需恢复Win11右键菜单样式，只需重复上述操作打开命令窗口粘贴以下命令并回车即可；\nreg.exe delete “HKCU\\Software\\Classes\\CLSID\\&#123;86ca1aa0-34aa-4e8b-a509-50c905bae2a2&#125;” /f\n\n相应的，添加或删除注册表项后，均需重启”Windows 资源管理器“才有效果。\n2.3 通过软件修改注册表还可通过软件 Windows 11 Classic Context Menu 实现更改Win11右键菜单样式，该软件为绿色版，可一键修改注册表以更改或恢复Win11右键菜单样式。\n3. 此应用无法在此设备上运行\n\n打开 Windows安全中心，打开方法如下\n\nWin10：设置-更新和安全-Windows安全中心-打开Windows安全中心Win11：设置-隐私和安全性-打开Windows安全中心\n\n\n点击 设备安全性 ，选择 内核隔离详细信息 ，关闭 内存完整性 设置开关，重启电脑。\n\n\n\n4. 电脑性能足够但播放4K视频卡顿搜索 NVIDIA Control Panel（NVIDIA控制面板）并打开，左侧菜单选择 管理3D设置 ，将 首选图形处理器 改为 高性能 NVDIA 处理器，此时用系统的 媒体播放器 应可正常播放4K视频。\n\n如果想让其他播放器也支持播放4K视频，可以继续在此页面选择打开 Windows 图形设置 ，进入 显示卡 设置（也可通过 设置-系统-屏幕-显示卡 进入），在该设置页面选择需要的播放器，将其 选项（图形首选项）改为 高性能 即可。\n\n"},{"url":"/2024/01/27/epub%E7%94%B5%E5%AD%90%E4%B9%A6%E6%A0%B7%E5%BC%8F/","content":"1. epub 文件简介ePub是由国际数字出版论坛（International Digital Publishing Forum，简称为IDPF）提出的一种自由开放的电子图书标准，使用它可以呈现固定布局排版的文档，也可以实现内容自动重排。内容重排的最大优势在于可以根据阅读设备的尺寸呈现电子书。\n2. epub 文件结构以下是一个标准的 EPUB 文件的结构：\nepub文件结构.epub├─ mimetype（文件）├─ META-INF（文件夹）│\t└─ container.xml└─ OEBPS（文件夹）\t├─ content.opf\t├─ toc.ncx\t├─ Text\t│\t├─ cover.xhtml\t│\t├─ text0001.xhtml\t│\t└─ text0002.xhtml\t├─ Styles\t│\t└─ stylesheet.css\t├─ Images\t│\t├─ cover.png\t│\t├─ images0002.jpg\t│\t└─ images0001.jpg\t├─ Fonts\t│\t└─ fonts0001.ttf\t├─ Audio\t│\t└─ audio0001.mp3\t└─ Video\t\t└─ video0001.mp4\n\n其中，各部分文件的内容及作用如下。\n2.1 mimetype 文件mimetype 文件没有后缀，文件内容固定如下所示：\napplication/epub+zip\n\n说明该文件兼容epub和zip两种格式，可以用epub和zip两种方式来进行解析使用。\n2.2 container.xml 文件EPUB 阅读系统会首先解析和查看 container.xml 文件，其中记录了 EPUB 包文件的文件名、路径和媒体类型，默认包文件名为 content.opf，container.xml 文件一般如下所示：\n&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;container version=&quot;1.0&quot; xmlns=&quot;urn:oasis:names:tc:opendocument:xmlns:container&quot;&gt;    &lt;rootfiles&gt;        &lt;rootfile full-path=&quot;OEBPS/content.opf&quot; media-type=&quot;application/oebps-package+xml&quot;/&gt;   &lt;/rootfiles&gt;&lt;/container&gt;\n\n其中 full-path 属性定义了 EPUB 包文件的文件名和路径，media-type 属性定义了包文件的媒体类型。\n2.3 content.opf 文件每个ePub都有一个单一的包文件，它的扩展名必须为 .opf，内部文件格式采用XML标准，通过包文件可以准确识别电子书的结构及阅读顺序，是解析及显示电子书的主要信息来源。包文件放置在名为 OEBPS 的文件夹下，导航文件及其他媒体文件同样存储在此文件夹中。文件结构如下：\n&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;package version=&quot;3.0&quot; unique-identifier=&quot;BookId&quot; xmlns=&quot;http://www.idpf.org/2007/opf&quot;&gt;\t&lt;metadata xmlns:dc=&quot;http://purl.org/dc/elements/1.1/&quot; xmlns:opf=&quot;http://www.idpf.org/2007/opf&quot;&gt;\t\t&lt;dc:identifier id=&quot;BookId&quot; opf:scheme=&quot;uuid&quot;&gt;uuid&lt;/dc:identifier&gt;\t\t&lt;dc:title&gt;EPUB标题&lt;/dc:title&gt;\t\t&lt;dc:language&gt;zh-CN&lt;/dc:language&gt;\t&lt;/metadata&gt;\t&lt;manifest&gt;\t\t&lt;item id=&quot;text0001.xhtml&quot; href=&quot;Text/text0001.xhtml&quot; media-type=&quot;application/xhtml+xml&quot;/&gt;\t\t&lt;item id=&quot;stylesheet.css&quot; href=&quot;Styles/stylesheet.css&quot; media-type=&quot;text/css&quot;/&gt;\t\t&lt;item id=&quot;nav.xhtml&quot; href=&quot;Text/nav.xhtml&quot; media-type=&quot;application/xhtml+xml&quot; properties=&quot;nav&quot;/&gt;        &lt;item id=&quot;fonts0001.ttf&quot; href=&quot;Fonts/fonts0001.ttf&quot; media-type=&quot;application/x-font-ttf&quot;/&gt;  \t\t&lt;item id=&quot;images0002.png&quot; href=&quot;Images/images0002.png&quot; media-type=&quot;image/png&quot;/&gt;\t&lt;/manifest&gt;\t&lt;spine toc=&quot;ncx&quot;&gt;\t\t&lt;itemref idref=&quot;text0001.xhtml&quot;/&gt;\t\t&lt;itemref idref=&quot;nav.xhtml&quot; linear=&quot;no&quot;/&gt;\t&lt;/spine&gt;\t&lt;guide&gt;\t\t&lt;reference type=&quot;cover&quot; title=&quot;封面&quot; href=&quot;Text/titlepage.xhtml&quot;/&gt;\t\t&lt;reference type=&quot;foreword&quot; title=&quot;前言&quot; href=&quot;Text/Foreword.xhtml&quot;/&gt;        &lt;reference type=&quot;text&quot; title=&quot;正文&quot; href=&quot;Text/Foreword.xhtml&quot;/&gt;\t&lt;/guide&gt;&lt;/package&gt;\n\n2.3.1 metadata 标签metadata 标签采用都柏林核心（Dublin Core）规范来描述epub电子书的元数据，在都柏林核心的简化形式（Simple Dublin Core）中，共包含15个元素，具体内容参见下文。一般的 EPUB 文件常用的元素通常只有以下几个：\n&lt;metadata xmlns:dc=&quot;http://purl.org/dc/elements/1.1/&quot; xmlns:opf=&quot;http://www.idpf.org/2007/opf&quot;&gt;\t&lt;dc:title&gt;标题&lt;/dc:title&gt;\t&lt;dc:creator&gt;EPUB作者&lt;/dc:creator&gt;    &lt;dc:creator opf:role=&quot;trl&quot;&gt;EPUB译者&lt;/dc:creator&gt;    &lt;dc:language&gt;zh-CN&lt;/dc:language&gt;\t&lt;dc:date opf:event=&quot;creation&quot;&gt;2023-01-07T08:13:14Z&lt;/dc:date&gt;\t&lt;dc:date opf:event=&quot;publication&quot;&gt;2023-01-07T08:13:14Z&lt;/dc:date&gt;\t&lt;dc:date opf:event=&quot;modification&quot;&gt;2023-01-07T08:13:14Z&lt;/dc:date&gt;\t&lt;dc:identifier opf:scheme=&quot;ISBN&quot;&gt;ISBN标识符&lt;/dc:identifier&gt;\t&lt;dc:identifier opf:scheme=&quot;UUID&quot; id=&quot;UUID&quot;&gt;UUID标识符&lt;/dc:identifier&gt;    &lt;dc:description&gt;简介&lt;dc:description&gt;\t&lt;dc:publisher&gt;出版社&lt;/dc:publisher&gt;    &lt;dc:subject&gt;关键词&lt;/dc:subject&gt;\t&lt;dc:contributor opf:role=&quot;bkp&quot;&gt;EPUB电子书制作者&lt;/dc:contributor&gt;&lt;/metadata&gt;\n\n说明：\n\n元数据 &lt; metadata &gt; 中 必须包含 title、Identifier 和 Language 三个元素；\n如有需要，title、creator、contributor、identifier、type、date、subject 允许设置多行多个数据，但要为每个元素设置不同的属性，以保证最佳的兼容性和可读性；\n\n2.3.1.1 dc : identifier 标识符dc:identifier 元素代表 EPUB 文件的标识符，是 EPUB 文件中必须有的元素，可以使用 opf:scheme 属性定义标识符的类型，常见的标识符类型有 ISBN、DOI、ISSN、UUID、AMAZON，也可以自定义标识符的类型，具体书写格式如下：\n&lt;dc:identifier opf:scheme=&quot;ISBN&quot;&gt;ISBN标识符&lt;/dc:identifier&gt;\n\n在同一个 OPF 文件中可以书写多个 dc:identifier 元素，但其中至少要有一个指定 id 属性，并从 package 元素的 unique-identifier 属性中引用这个 id，具体书写格式如下：\n&lt;!-- 在 unique-identifier 中引用 id，示例省略了一些无关属性和页面元素 --&gt;&lt;package unique-identifier=&quot;isbn-id&quot;&gt;\t&lt;metadata&gt;&lt;/metadata&gt;    ...&lt;/package&gt;\n\n2.3.1.2 dc : title 标题dc:title 元素代表 EPUB 文件的标题，是 EPUB 文件中必须有的元素，可以设置多行多个标题，文件顺序中的第一个dc:title元素将作为 EPUB 文件的主要标题，具体书写格式如下：\n&lt;dc:title&gt;EPUB标题&lt;/dc:title&gt;\n\n此外，通常使用 dc:alternative 元素来表示作品的替代标题或其他语言版本的标题，其规范也和 dc:title 元素完全一致：\n&lt;dc:alternative&gt;EPUB替代标题&lt;/dc:alternative&gt;&lt;dc:alternative xml:lang=&quot;de&quot;&gt;EPUB德语替代标题&lt;/dc:alternative&gt;\n\n为了更具体描述标题，可以使用 title-type 属性表示具体的 dc:title 元素的类型，其属性值一般有 main（主标题）、subtitle（副标题）、short（短标题或缩写）、collection（所属集合或系列的标题）、edition（版本或改编形式的标题） 及 expanded（扩展部分的标题），具体书写格式如下：\n&lt;dc:title opf:type=&quot;main&quot;&gt;EPUB标题&lt;/dc:title&gt; &lt;!-- 作品的主要标题 --&gt;\n\n要表示多语言版本的标题时也可以使用 xml:lang 表示具体的 dc:title 元素的语言：\n&lt;dc:title xml:lang=&quot;en&quot;&gt;EPUB英文标题&lt;/dc:title&gt;\n\n2.3.1.3 dc : language 语种dc:language 元素表示 EPUB 文件内容使用的语言，内容必须是一个有效的 RFC 3066 语言标识符，在OPF 文件 &lt;dc:language&gt; 元素可以出现多次，用来定义多个语言，文件顺序中的第一个 &lt;dc:language&gt; 元素将作为主要语言，具体书写格式如下：\n&lt;dc:language&gt;en-US&lt;/dc:language&gt;&lt;!-- 美式英文 --&gt;\n\n2.3.1.4 dc : creator 创作者dc:creator 元素表示 EPUB 文件的创作者，其内容可以是人名或组织名，可以设置多个 dc:creator 元素表示多个创作者，文件顺序中的第一个dc:creator元素将作为 EPUB 文件的主要创作者，具体书写格式如下：\n&lt;dc:creator&gt;EPUB创作者&lt;/dc:creator&gt;\n\n可以使用 opf:role 属性表示创作者的具体类型，常见的属性值有 aut（作者）、trl（译者）、edt（编辑）、ill（插图作者）、cov（封面作者）、pbl（出版商）、bkp（电子书制作者），具体书写格式如下：\n&lt;dc:creator opf:role=&quot;trl&quot;&gt;EPUB译者&lt;/dc:creator&gt;\n\n2.3.1.5 dc : contributor 其他责任者 dc:contributor 元素表示作品的次要作者或其他责任者，其规范和 dc:creator 元素完全一致，以上 dc:creator 元素中的 opf:role 属性中的多数属性值也一般在这里定义，具体书写格式如下：\n&lt;dc:contributor opf:role=&quot;bkp&quot;&gt;EPUB电子书制作者&lt;/dc:contributor&gt;\n\n2.3.1.6 dc : date 日期dc:date 元素表示 EPUB 文件的出版日期，其值采用基于 ISO 5601 规范定义的日期格式，可以使用 opf:event 属性定义标识符的类型，常见的标识符类型有 publication、creation、modification，具体含义及书写格式如下：\n&lt;dc:date opf:event=&quot;creation&quot;&gt;2023-01-07T08:13:14Z&lt;/dc:date&gt; &lt;!-- EPUB创建时间 --&gt;&lt;dc:date opf:event=&quot;publication&quot;&gt;2023-01-07T08:13:14Z&lt;/dc:date&gt; &lt;!-- 纸质书出版时间 --&gt;&lt;dc:date opf:event=&quot;modification&quot;&gt;2023-01-07T08:13:14Z&lt;/dc:date&gt; &lt;!-- EPUB/纸质书最后修改时间，更多用于EPUB --&gt;\n\n2.3.1.7 dc : subject 主题dc:subject 元素表示 EPUB 文件的主题，也即标签，其值应为可阅读的文字标签，一本书有多个主题时应该使用多个dc:subject 元素分别列出，可以使用 opf:authority 属性定义主题词的来源，如 LCC（美国国会图书馆分类法）、LCSH（美国国会图书馆标题表）、MESH（医学主题词表）、DDC（杜威十进分类法）、UDC（国际十进分类法）等，具体书写格式如下：\n&lt;dc:subject&gt;EPUB主题词&lt;/dc:subject&gt;&lt;dc:subject opf:authority=&quot;LCC&quot;&gt;EPUB主题词&lt;/dc:subject&gt; &lt;!-- 但opf:authority属性并不常用 --&gt;\n\n2.3.1.8 dc : type 类型dc:type 元素表示 EPUB 文件的特化类型，其值为可阅读的文字标签，建议采用来自于受控词表中的值（如DCMI类型词汇表），如Dataset（数据集）、Image（图像）、Text（文本）等，具体书写格式如下：\n&lt;dc:type rdf:value=&quot;http://purl.org/dc/dcmitype/Text&quot;&gt;Text&lt;/dc:type&gt;\n\n2.3.1.9 dc : publisher 出版商dc:publisher 元素表示使 EPUB 文件成为可以获得并可用的责任者，其值可以是个体、组织或服务的名称，具体书写格式如下：\n&lt;dc:publisher&gt;人民教育出版社&lt;/dc:publisher&gt;\n\n2.3.1.10 dc : description 描述dc:description 元素表示对 EPUB 文件的描述，可以理解为简介，具体书写格式如下：\n&lt;dc:description&gt;EPUB内容的简要描述&lt;/dc:description&gt;\n\n2.3.1.11 dc : format 格式dc:format 元素表示 EPUB 文件的媒体类型或大小，建议采用来自于受控词表中的值（如MIME媒体类型）定义计算机媒体格式，EPUB 文件中通常使用 application/epub+zip 作为格式，具体书写格式如下：\n&lt;dc:format&gt;application/epub+zip&lt;/dc:format&gt;\n\n2.3.1.12 dc : rights 权限dc:format 元素表示对 EPUB 的权限声明，具体书写格式如下：\n&lt;dc:rights&gt;Creative Commons Attribution-NonCommercial 4.0 International License&lt;/dc:rights&gt;\n\n2.3.1.13 dc : relation 关联dc:relation 元素表示该 EPUB 文件与其他相关资源的关系，具体书写格式如下：\n&lt;dc:relation&gt;Sequel: &quot;The Journey Continues&quot;&lt;/dc:relation&gt;\n\n2.3.1.14 dc : coverage 覆盖范围dc:coverage 元素表示该 EPUB 文件内容所涉及的外延与其地理或时间覆盖范围，具体书写格式如下：\n&lt;dc:coverage&gt;Los Angeles, California, USA&lt;/dc:coverage&gt;\n\n2.3.1.15 dc : source 来源dc:source 元素表示该 EPUB 文件的出处，可以用于指定与当前 EPUB 文件相关的原始文档、网站链接等信息，具体书写格式如下：\n&lt;dc:source&gt;Print edition: Title of the Original Book, Author&#x27;s Name&lt;/dc:source&gt;\n\n2.3.2 manifest 标签manifest 标签提供出版物内容资源的列表，每一个资源由一个 item 标签来表示，manifest 标签里 item 的顺序不影响观看顺序。一般情况下该标签的内容由软件自动生成。其结构如下：\n&lt;manifest&gt;\t&lt;item id=&quot;ncx&quot; href=&quot;toc.ncx&quot; media-type=&quot;application/x-dtbncx+xml&quot;/&gt;\t&lt;item id=&quot;text0001.xhtml&quot; href=&quot;Text/text0001.xhtml&quot; media-type=&quot;application/xhtml+xml&quot;/&gt;\t&lt;item id=&quot;stylesheet.css&quot; href=&quot;Styles/stylesheet.css&quot; media-type=&quot;text/css&quot;/&gt;\t&lt;item id=&quot;nav.xhtml&quot; href=&quot;Text/nav.xhtml&quot; media-type=&quot;application/xhtml+xml&quot; properties=&quot;nav&quot;/&gt;\t&lt;item id=&quot;font0001.ttf&quot; href=&quot;Fonts/font0001.ttf&quot; media-type=&quot;application/x-font-ttf&quot;/&gt;\t&lt;item id=&quot;cover.png&quot; href=&quot;Images/cover.png&quot; media-type=&quot;image/png&quot;/&gt;&lt;/manifest&gt;\n\n其中，id 表示文件的ID号；href 指文件的路径信息；media-type 指文件的媒体类型。\n2.3.3 spine 标签spine 标签定义了 EPUB 文件内容的展示顺序列表（这个顺序与 epub 中 xhtml 文件的物理顺序无关，而是 EPUB 制作者想要这个 EPUB 文件在阅读时展示的顺序），通过 itemref 子标签的顺序定义默认阅读的顺序，其中的 toc 属性内容必须与 manifest 标签列出来的 toc.ncx 文件的 id 一致。其结构如下：\n&lt;spine toc=&quot;ncx&quot;&gt;  &lt;itemref idref=&quot;text0001.xhtml&quot;/&gt;  &lt;itemref idref=&quot;text0001-1.xhtml&quot;/&gt;  &lt;itemref idref=&quot;text0001-2.xhtml&quot;/&gt;  &lt;itemref idref=&quot;text0001-3.xhtml&quot;/&gt;  &lt;itemref idref=&quot;text0001-4.xhtml&quot;/&gt;  &lt;itemref idref=&quot;nav.xhtml&quot; linear=&quot;no&quot;/&gt;&lt;/spine&gt;\n\nspine 标签中的 idref 属性的顺序即该 EPUB 文件内容的展现顺序，linear 属性则表明该项是否作为线性阅读顺序中的一项（即是否在目录或阅读过程中展示，和先后次序无关），其值必须是 yes 或 no，默认值是 yes。需要注意的是有些阅读器可能会忽略 linear 属性，所以有时为了避免显示不需要显示的文件，如 nav.xhtml 文件，会选择不将该文件加入 spine 标签中。\nspine 标签还能设置 page-progression-direction 属性控制出版物内容流动的全局方向（翻页方向），可设置的值如下：\n\nltr：从左到右，横排样式\nrtl：从右到左，竖排样式\ndefault：默认值，从左到右\n\n当要制作一本竖排电子书的时候，才需要设置该属性。如：\n&lt;spine toc=&quot;ncx&quot; page-progression-direction=&quot;rtl&quot;&gt;  ...&lt;/spine&gt;\n\n2.3.4 guide 标签guide 标签可以为 EPUB 阅读系统提供语义信息。OPF2 的 guide 标签被废弃了，代之以 nav.xhtml 的 landmarks 属性。为了向前兼容EPUB2 阅读系统，制作者可以在包文件里包括 guide 标签。其结构如下：\n&lt;guide&gt;\t&lt;reference type=&quot;cover&quot; title=&quot;封面&quot; href=&quot;Text/Cover.xhtml&quot;/&gt;    &lt;reference type=&quot;copyright Page&quot; title=&quot;版权页&quot; href=&quot;Text/CopyrightPage.xhtml&quot;/&gt;    &lt;reference type=&quot;Table Of Contents&quot; title=&quot;目录&quot; href=&quot;Text/TableOfContents.xhtml&quot;/&gt;    &lt;reference type=&quot;foreword&quot; title=&quot;前言&quot; href=&quot;Text/Foreword.xhtml&quot;/&gt;    &lt;reference type=&quot;preface&quot; title=&quot;序&quot; href=&quot;Text/Preface.xhtml&quot;/&gt;    &lt;reference type=&quot;text&quot; title=&quot;文本&quot; href=&quot;Text/Text.xhtml&quot;/&gt;    &lt;reference type=&quot;colophon&quot; title=&quot;后记&quot; href=&quot;Text/Colophon.xhtml&quot;/&gt;&lt;/guide&gt;\n\n在 nav.xhtml 中以 landmarks 属性定义文件语义的格式如下：\n&lt;nav epub:type=&quot;landmarks&quot; id=&quot;landmarks&quot; hidden=&quot;&quot;&gt;\t&lt;h1&gt;Landmarks&lt;/h1&gt;\t&lt;ol&gt;        &lt;li&gt;&lt;a epub:type=&quot;cover&quot; href=&quot;../Text/Cover.xhtml&quot;&gt;封面&lt;/a&gt;&lt;/li&gt;\t\t&lt;li&gt;&lt;a epub:type=&quot;copyright-page&quot; href=&quot;../Text/Copyright.xhtml&quot;&gt;版权页&lt;/a&gt;&lt;/li&gt;\t\t&lt;li&gt;&lt;a epub:type=&quot;toc&quot; href=&quot;#toc&quot;&gt;目录&lt;/a&gt;&lt;/li&gt;\t\t&lt;li&gt;&lt;a epub:type=&quot;foreword&quot; href=&quot;../Text/Foreword.xhtml&quot;&gt;前言&lt;/a&gt;&lt;/li&gt;        &lt;li&gt;&lt;a epub:type=&quot;prologue&quot; href=&quot;../Text/Prologue.xhtml&quot;&gt;序&lt;/a&gt;&lt;/li&gt;        &lt;li&gt;&lt;a epub:type=&quot;bodymatter&quot; href=&quot;../Text/Bodymatter.xhtml&quot;&gt;主体&lt;/a&gt;&lt;/li&gt;        &lt;li&gt;&lt;a epub:type=&quot;epilogue&quot; href=&quot;../Text/Epilogue.xhtml&quot;&gt;后记&lt;/a&gt;&lt;/li&gt;\t&lt;/ol&gt;&lt;/nav&gt;\n\n要注意的是，guide 标签和 landmarks 属性定义文件语义时的值属性并不完全一样，以上举例的是部分比较常用的语义，如果需要详细的定义，landmarks 属性可以查阅《epub3.0内容文件规范中文版》第2.2.3.1.5章 属性定义。\n2.4 toc.ncx 文件toc.ncx 文件记录了 EPUB 文件的目录结构，EPUB 阅读系统读取的目录就来自这个文件。OPF2 里定义的 toc.ncx 文件已经被 epub3 的导航文件 nav.xhtml 取代了，但是为了向前兼容，epub文件中依然可以包含 toc.ncx 文件。其结构如下：\n&lt;?xml version=&#x27;1.0&#x27; encoding=&#x27;utf-8&#x27;?&gt;&lt;ncx xmlns=&quot;http://www.daisy.org/z3986/2005/ncx/&quot; version=&quot;2005-1&quot; xml:lang=&quot;zh&quot;&gt;\t&lt;head&gt;\t\t&lt;meta name=&quot;dtb:uid&quot; content=&quot;标识符内容&quot;/&gt;\t\t&lt;meta name=&quot;dtb:depth&quot; content=&quot;3&quot;/&gt;\t\t&lt;meta name=&quot;dtb:totalPageCount&quot; content=&quot;0&quot;/&gt;\t\t&lt;meta name=&quot;dtb:maxPageNumber&quot; content=&quot;0&quot;/&gt;\t&lt;/head&gt;\t&lt;docTitle&gt;\t\t&lt;text&gt;一个陌生女人的来信&lt;/text&gt;\t&lt;/docTitle&gt;\t&lt;navMap&gt;\t\t&lt;navPoint id=&quot;navpoint-1&quot; playOrder=&quot;1&quot;&gt;\t\t\t&lt;navLabel&gt;&lt;text&gt;第一章&lt;/text&gt;&lt;/navLabel&gt;\t\t\t&lt;content src=&quot;Text/chapter1.xhtml&quot; /&gt;\t\t\t&lt;navPoint id=&quot;navpoint-6&quot; playOrder=&quot;2&quot;&gt;\t\t\t\t&lt;navLabel&gt;&lt;text&gt;第一章第一节&lt;/text&gt;&lt;/navLabel&gt;\t\t\t\t&lt;content src=&quot;Text/section1.xhtml&quot; /&gt;\t\t\t\t&lt;navPoint id=&quot;navpoint-7&quot; playOrder=&quot;3&quot;&gt;\t\t\t\t\t&lt;navLabel&gt;&lt;text&gt;第一章第一节第一讲&lt;/text&gt;&lt;/navLabel&gt;\t\t\t\t\t&lt;content src=&quot;Text/subsection1.xhtml&quot; /&gt;\t\t\t\t&lt;/navPoint&gt;\t\t\t&lt;/navPoint&gt;\t\t&lt;/navPoint&gt;\t&lt;/navMap&gt;&lt;/ncx&gt;\n\n其中，head 标签内容如下：\n\nuid：数字图书的惟一ID，该标签应该和OPF文件中的 dc:identifier 对应。\ndepth：反映目录树层级的深度，可以理解为下方 navMap 标签结构的层级，其值为正整数。\ntotalPageCount 和 maxPageNumber：仅用于纸质图书，保留 0 即可。\n\ndocTitle/text 的内容是图书的标题，和 OPF 文件中的 dc:title 匹配。\nnavMap 标签是 ncx 文件中最重要的部分，定义了图书的目录，navMap 表情中包含了一个或多个 navPoint 标签，每个 navPoint 标签都要包含下列属性：\n\nplayOrder属性，说明文档的阅读顺序。和 OPF 文件 spine 标签中 itemref 标签的顺序相同。\n\nnavLabel&#x2F;text 标签，给出该章节的标题。\n\ncontent 标签，它的 src 属性指向包含这些内容的物理资源，即 OPF 文件 manifest 标签中声明的文件，也可使用片段标识符引用XHTML内容中的锚标签——比如text0001.html#footnote1。\n\n\n2.5 ncx 和 spine 的区别toc.ncx 文件和 content.opf 文件的 spine标签都描述了文档的顺序和内容，很容易混淆，两者的功能是有明显区别的。\nOPF 文件中的 spine 标签描述的是 EPUB 文件内容的展示顺序，比如在第一章后应该接着第二章。\nncx 文件描述的则是 EPUB 文件的目录结构，这个目录结构不仅会包含书中主要的章节，还可能包含没有单独分页的小节。\n也就是说， ncx 文件包含的 navPoint 标签通常比 OPF 文件 spine 标签中 itemref 标签多，而且，spine 标签中的所有项都应该出现在 ncx 文件中。\n3. epub 正文样式0. 整体样式常规样式\n/* 文本主体统一样式 */.body &#123;\tdisplay: block; /* 显示块级元素 */\ttext-align: left; /* 文本靠左排列 */\ttext-align: justify; /* 文本两端对齐 */\tpadding: 0 0 0 0; /* 内边距 */\tmargin: 0 5pt 0 5pt; /* 上右下左外边距 */&#125;/* 链接样式 */a &#123;\tcolor: #000000; /* 修改链接颜色蓝色为黑色 */\ttext-decoration: none; /* 取消链接下划线 */&#125;\n\n打印样式\n/* 打印文本样式 */@page &#123;\tmargin-bottom: 5pt;\tmargin-top: 5pt;&#125;/* 打印封面样式 */@page &#123;\tpadding: 0;\tmargin: 0;&#125;\n\n1. 封面示例&lt;style type=&quot;text/CSS&quot;&gt;/* 打印封面样式 */@page &#123;\tpadding: 0;\tmargin: 0;&#125;/* 预览封面样式 */body &#123;\ttext-align: center;\tpadding: 0;\tmargin: 0;&#125;&lt;/style&gt;\n\n&lt;div&gt;\t&lt;svg version=&quot;1.1&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; width=&quot;100%&quot; height=&quot;100%&quot; viewBox=&quot;0 0 imageWidth imageHeight&quot; preserveAspectRatio=&quot;none&quot;&gt;\t\t&lt;image width=&quot;imageWidth&quot; height=&quot;imageHeight&quot; xlink:href=&quot;../Images/cover.png&quot;/&gt;\t&lt;/svg&gt;&lt;/div&gt;&lt;!-- 以上 imageWidth 和 imageWidth 分别代表封面图片实际的宽和高，按实际情况修改即可 --&gt;\n\n2. 目录示例/* 第一层级目录，单级目录亦用此样式 */.catalog1 &#123;\tfont-size: 100%; /* 字体大小 */\tline-height: 125%; /* 行高 */\tmargin: 0.5em 0 0.5em 0; /* 上右下左外边距 */&#125;/* 第二层级目录 */.catalog2 &#123;\tfont-size: 100%;\tline-height: 125%;\tmargin: 0.2em 0 0.2em 2em;&#125;/* 第三层级目录 */.catalog3 &#123;\tfont-size: 100%;\tline-height: 125%;\tmargin: 0.2em 0 0.2em 4em;&#125;\n\n&lt;p class=&quot;catalog1&quot;&gt;&lt;a href=&quot;LUOMO01.html#Chapter001&quot;&gt;1. 第一章&lt;/a&gt;&lt;/p&gt;&lt;p class=&quot;catalog2&quot;&gt;&lt;a href=&quot;LUOMO01.html#Chapter002&quot;&gt;1.1 第一节&lt;/a&gt;&lt;/p&gt;&lt;p class=&quot;catalog3&quot;&gt;&lt;a href=&quot;LUOMO01.html#Chapter003&quot;&gt;1.1.1 第一讲&lt;/a&gt;&lt;/p&gt;\n\n3. 标题示例/* 标题样式 */.title &#123;\tline-height: 125%; /* 行高 */\tfont-weight: bold; /* 文本粗体 */\tfont-size: 120%; /* 字体较大 */\tmargin-top: 0; /* 上外边距 */\tpadding: 5px 5px 5px 5px; /* 内边距 */\tborder-left: 9px solid #000; /* 元素边框 */&#125;\n\n&lt;h1 id=&quot;Chapter001&quot; class=&quot;title&quot;&gt;1. 第一章&lt;/h1&gt;&lt;h1 id=&quot;Chapter002&quot; class=&quot;title&quot;&gt;1.1 第一节&lt;/h1&gt;&lt;h1 id=&quot;Chapter003&quot; class=&quot;title&quot;&gt;1.1.1 第一讲&lt;/h1&gt;\n\n4. 正文示例/* 正文样式 */.mainbody &#123;\tfont-size: 100%; /* 字体大小 */\tline-height: 120%; /* 行高 */\ttext-indent: 2em; /* 首行文本缩进 */\tmargin: 0.3em 0 0.3em 0; /* 上右下左外边距 */&#125;\n\n&lt;p class=&quot;mainbody&quot;&gt;正文示例01&lt;/p&gt;&lt;p class=&quot;mainbody&quot;&gt;正文示例02&lt;/p&gt;&lt;p class=&quot;mainbody&quot;&gt;正文示例03&lt;/p&gt;\n\n5. 强调字体/* 强调字体，颜色可根据需要改变 */.emphasize &#123;\tcolor: #000000; /* 字体颜色 */\tfont-size: 90%; /* 字体大小 */\tfont-weight: bold; /* 文本粗体 */\ttext-indent: 0; /* 取消首行文本缩进 */&#125;\n\n&lt;p class=&quot;emphasize&quot;&gt;少小离家老大回，&lt;br/&gt;乡音未改鬓毛衰。&lt;br/&gt;儿童相见不相识，&lt;br/&gt;笑问客从何处来。&lt;/p&gt;\n\n6. 小节序号/* 小节序号 */.sectionnum &#123;\tfont-size: 120%; /* 字体大小 */\tline-height: 125%; /* 行高 */\tfont-weight: bold; /* 文本粗体 */\ttext-align: center; /* 文本居中 */\tfont-style: italic; /* 文本斜体 */\tmargin: 2.5em 0 0.5em 0; /* 上右下左外边距 */&#125;\n\n&lt;p class=&quot;section&quot;&gt;1&lt;/p&gt;&lt;p class=&quot;section&quot;&gt;2&lt;/p&gt;&lt;p class=&quot;section&quot;&gt;3&lt;/p&gt;\n\n7. 上标注释/* 注释序号 */.annotatenum &#123;\tfont-size: 75%; /* 字体大小 */\tline-height: 125%; /* 行高 */\tvertical-align: super; /* 垂直对齐文本的上标 */&#125;/* 注释内容 */.annotate &#123;\tfont-size: 80%; /* 字体大小 */\tline-height: 120%; /* 行高 */&#125;\n\n&lt;!-- 正文中注释序号 --&gt;&lt;sup class=&quot;annotatenum&quot; id=&quot;annonum0101&quot;&gt;&lt;small&gt;&lt;a href=&quot;anno0101&quot;&gt;［1］&lt;/a&gt;&lt;/small&gt;&lt;/sup&gt;&lt;!-- 正文底注释序号及注释正文 --&gt;&lt;p&gt;&lt;sup class=&quot;annotatenum&quot; id=&quot;anno001&quot;&gt;&lt;small&gt;&lt;a href=&quot;annonum001&quot;&gt;［1］&lt;/a&gt;&lt;/small&gt;&lt;/sup&gt;&lt;span class=&quot;annotate&quot;&gt;注释内容&lt;/span&gt;&lt;/p&gt;\n\n8. 分割线/* 分割线 */.splitline &#123;\theight: 2px; /* 线条粗细 */\twidth: 98%; /* 线条宽度 */\tborder: none; /* 清除原始线条 */\tbackground: #bcbcbc; /* 线条颜色 */&#125;\n\n&lt;hr class=&quot;splitline&quot;/&gt;\n\n9. 上下标数字/* 上标数字 */&lt;p&gt;10&lt;sup&gt;&lt;small&gt;35&lt;/small&gt;&lt;/sup&gt;&lt;/p&gt;/* 下标数字 */&lt;p&gt;10&lt;sub&gt;&lt;small&gt;35&lt;/small&gt;&lt;/sub&gt;&lt;/p&gt;\n\n10. 代码块/* 代码块盒子 */.boxblock &#123;\tbackground-color: #dcdcdc; /* 代码块背景颜色 */\tmargin: 0.25em 0 0.25em 0; /* 上右下左外边距 */\tpadding: 0.1em 0 0.1em 0; /* 上右下左内边距 */\tborder: #000000 none 1px /* 取消代码块边框 */\tborder-radius: 2px; /* 边框框圆角 */    &#125;/* 代码块文本 */.boxtext &#123;\tfont-size: 60%; /* 字体大小 */\tline-height: 120%; /* 行高 */    text-align: left; /* 文字左对齐 */\twhite-space: pre-wrap; /* 文本正常空格及换行 */\tertical-align: middle; /* 垂直对齐文本中部 */&#125;\n\n&lt;div class=&quot;boxblock&quot;&gt;&lt;pre class=&quot;boxtext&quot;&gt;    daimakuaishili01;    daimakuaishili02;    daimakuaishili03;&lt;/pre&gt;&lt;/div&gt;\n\n4. HTML实例&lt;head&gt;\t&lt;meta charset=&quot;utf-8&quot;&gt;\t&lt;title&gt;epub电子书样式&lt;/title&gt;\t&lt;style type=&quot;text/CSS&quot;&gt;\t\t/* body区域 begin */\t\t.body &#123;\t\t\tdisplay: block; /* 显示块级元素 */\t\t\ttext-align: left; /* 文本靠左排列 */\t\t\ttext-align: justify; /* 文本两端对齐 */\t\t\tpadding: 0 0 0 0; /* 内边距 */\t\t\tmargin: 0 5pt 0 5pt; /* 上右下左外边距 */\t\t&#125;\t\t/* body区域 end */\t\t/* 目录样式 begin */\t\t/* 去除链接样式的蓝色和下划线 */\t\ta &#123;\t\t\tcolor: #000000;\t\t\ttext-decoration: none;\t\t&#125;\t\t/* 第一层级目录，单级目录亦用此样式 */\t\t.catalog1 &#123;\t\t\tfont-size: 100%; /* 字体大小 */\t\t\tline-height: 125%; /* 行高 */\t\t\tmargin: 0.5em 0 0.5em 0; /* 上右下左外边距 */\t\t&#125;\t\t.catalog2 &#123;\t\t\tfont-size: 100%;\t\t\tline-height: 125%;\t\t\tmargin: 0.2em 0 0.2em 2em;\t\t&#125;\t\t.catalog3 &#123;\t\t\tfont-size: 100%;\t\t\tline-height: 125%;\t\t\tmargin: 0.2em 0 0.2em 4em;\t\t&#125;\t\t/* 目录样式 end */\t\t/* 标题样式 begin */\t\t.title &#123;\t\t\tline-height: 125%; /* 行高 */\t\t\tfont-weight: bold; /* 文本粗体 */\t\t\tfont-size: x-large; /* 字体较大 */\t\t\tmargin-top: 0; /* 上外边距 */\t\t\tpadding: 5px 5px 5px 5px; /* 内边距 */\t\t\tborder-style: none none none solid; /* 元素边框 */\t\t\tborder-width: 0px 0px 0px 10px; /* 边框宽度 */\t\t\tborder-color: #000000; /* 边框颜色 */\t\t&#125;\t\t/* 标题样式 end */\t\t/* 正文样式 begin */\t\t.mainbody &#123;\t\t\tfont-size: 100%; /* 字体大小 */\t\t\tline-height: 120%; /* 行高 */\t\t\ttext-indent: 2em; /* 首行文本缩进 */\t\t\tmargin: 0.3em 0 0.3em 0em; /* 上右下左外边距 */\t\t&#125;\t\t/* 正文样式 end */\t\t/* 小节序号 begin */\t\t.sectionnum &#123;\t\t\tfont-size: 125%; /* 字体大小 */\t\t\tline-height: 125%; /* 行高 */\t\t\tfont-weight: bold; /* 文本粗体 */\t\t\ttext-align: center; /* 文本居中 */\t\t\tfont-style: italic; /* 文本斜体 */\t\t\tmargin: 2.5em 0 0.5em 0; /* 上右下左外边距 */\t\t&#125;\t\t/* 小节序号 end */\t\t/* 上标注释 begin */\t\t/* 注释序号 */\t\t.annotatenum &#123;\t\t\tfont-size: 75%; /* 字体大小 */\t\t\tline-height: 125%; /* 行高 */\t\t\tvertical-align: super; /* 垂直对齐文本的上标 */\t\t&#125;\t\t/* 注释内容 */\t\t.annotate &#123;\t\t\tfont-size: 80%; /* 字体大小 */\t\t\tline-height: 120%; /* 行高 */\t\t&#125;\t\t/* 上标注释 end */\t\t\t\t\t/* 分割线 begin */\t\t.splitline &#123;\t\t\theight: 2px; /* 线条粗细 */\t\t\twidth: 98%; /* 线条宽度 */\t\t\tborder: none; /* 清除原始线条 */\t\t\tbackground: #bcbcbc; /* 线条颜色 */\t\t&#125;\t\t/* 分割线 end */\t\t/* 代码块 begin */\t\t/* 代码块背景 */\t\t.boxblock &#123;\t\t\tbackground-color: #dcdcdc; /* 代码块背景颜色 */\t\t\tmargin: 0.25em 0 0.25em 0; /* 上右下左外边距 */\t\t\tpadding: 0.1em 0 0.1em 0; /* 上右下左内边距 */\t\t\tborder: none; /* 取消代码块边框 */\t\t\tborder-radius: 2px; /* 边框框圆角 */\t\t&#125;\t\t/* 代码块文本 */\t\t.boxtext &#123;\t\t\tfont-size: 60%; /* 字体大小 */\t\t\tline-height: 120%; /* 行高 */\t\t\twhite-space: pre-wrap; /* 文本正常空格及换行 */\t\t\tvertical-align: middle; /* 垂直对齐文本中部 */\t\t&#125;\t\t/* 代码块 end */\t&lt;/style&gt;&lt;/head&gt;&lt;body class=&quot;body&quot;&gt;\t&lt;h2&gt;目录示例&lt;/h2&gt;\t&lt;p class=&quot;catalog1&quot;&gt;&lt;a href=&quot;#Chapter001&quot;&gt;1. 第一章&lt;/a&gt;&lt;/p&gt;\t&lt;p class=&quot;catalog2&quot;&gt;&lt;a href=&quot;#Chapter002&quot;&gt;1.1 第一节&lt;/a&gt;&lt;/p&gt;\t&lt;p class=&quot;catalog3&quot;&gt;&lt;a href=&quot;#Chapter003&quot;&gt;1.1.1 第一讲&lt;/a&gt;&lt;/p&gt;\t&lt;br&gt;\t&lt;h2&gt;标题示例&lt;/h2&gt;\t&lt;h1 id=&quot;Chapter001&quot; class=&quot;title&quot;&gt;1. 第一章&lt;/h1&gt;\t&lt;h1 id=&quot;Chapter002&quot; class=&quot;title&quot;&gt;1.1 第一节&lt;/h1&gt;\t&lt;h1 id=&quot;Chapter003&quot; class=&quot;title&quot;&gt;1.1.1 第一讲&lt;/h1&gt;\t&lt;br&gt;\t&lt;h2&gt;正文示例&lt;/h2&gt;\t&lt;p class=&quot;mainbody&quot;&gt;正文示例01&lt;/p&gt;\t&lt;p class=&quot;mainbody&quot;&gt;正文示例02&lt;/p&gt;\t&lt;p class=&quot;mainbody&quot;&gt;正文示例03&lt;/p&gt;\t&lt;br&gt;\t&lt;h2&gt;小节序号&lt;/h2&gt;\t&lt;p class=&quot;section&quot;&gt;1&lt;/p&gt;\t&lt;p class=&quot;section&quot;&gt;2&lt;/p&gt;\t&lt;p class=&quot;section&quot;&gt;3&lt;/p&gt;\t&lt;br&gt;\t&lt;h2&gt;上标注释&lt;/h2&gt;\t&lt;p&gt;注释序号&lt;sup class=&quot;annotatenum&quot; id=&quot;annotatenum001&quot;&gt;&lt;small&gt;&lt;a href=&quot;annotate001&quot;&gt;［1］&lt;/a&gt;&lt;/small&gt;&lt;/sup&gt;&lt;/p&gt;\t&lt;p&gt;&lt;sup class=&quot;annotatenum&quot; id=&quot;annotate001&quot;&gt;&lt;small&gt;&lt;a href=&quot;annotatenum001&quot;&gt;［1］&lt;/a&gt;&lt;/small&gt;&lt;/sup&gt;&lt;span class=&quot;annotate&quot;&gt;注释体&lt;/span&gt;&lt;/p&gt;\t&lt;br&gt;\t&lt;h2&gt;分割线&lt;/h2&gt;\t&lt;hr class=&quot;splitline&quot;/&gt;\t&lt;br&gt;\t&lt;h2&gt;上下标数字&lt;/h2&gt;\t&lt;p&gt;10&lt;sup&gt;&lt;small&gt;35&lt;/small&gt;&lt;/sup&gt;&lt;/p&gt;\t&lt;p&gt;10&lt;sub&gt;&lt;small&gt;35&lt;/small&gt;&lt;/sub&gt;&lt;/p&gt;\t&lt;br&gt;\t&lt;br&gt;\t&lt;br&gt;\t&lt;h2&gt;代码块&lt;/h2&gt;\t&lt;div class=&quot;boxblock&quot;&gt;&lt;pre class=&quot;boxtext&quot;&gt;    daimakuaishili01;    daimakuaishili02;    daimakuaishili03;&lt;/pre&gt;\t&lt;/div&gt;&lt;/body&gt;\n\n"},{"url":"/2024/01/27/%E5%B8%B8%E8%A7%81%E5%BD%B1%E8%A7%86%E7%89%87%E6%BA%90%E6%A0%87%E7%AD%BE%E8%A7%A3%E9%87%8A/","content":"1. 命名规则总概常见的影视片源命名的规则基本一致，可能会在细节上有不同要求，以下为常见的一种规则。\n[影视中文名称].影视名称.[公映年份].[影片版本].字幕语言.分辨率.片源来源.[音频]视频编码-发布组名称.文件后缀例：流浪地球2.The.Wandering.Earth.II.2023.2160p.120FPS.HDR.WEB-DL.H265.DDP5.1.Atoms-GPTHD.mkv\n\n命名中，各单词间的间隔符通常为空格或 . 号。\n2. 各标签解释2.1 影视名称影视片源命名时，一定要写上影视的完整英文名，中文名则可有可无，因为大陆、港台等各个地区的语言习惯不同，很多国外发行的影视会有多个中文译名，所以大多数影视命名时不会添加中文名，一方面避免混淆，另一方面也便于国际间流通。\n如2003年迪士尼发行的 Finding Nemo 就有海底总动员、寻找尼莫、海底奇兵(港)三个中文名，因此在命名时通常不会写上中文名称：Finding.Nemo.2003.2160p.BluRay.x265.10bit.SDR.TrueHD.7.1.Atmos-SWTYBLZ.mkv\n\n也有中文名附在英文名之前的情况，这通常是国内的压制组为便于辨识另行增补的，有时候影视片名不够特色，为了避免混淆还会出现把多个中文译名都写上的情况，如：\n环太平洋.Pacific.Rim.2013.1080p.BluRay.HEVC.10bit-GHFLY.mkv\n\n此外，在标识国内电视剧时，如果资源中包含台标，还可以加上电视台的名称，如：\nAHTV.Judge.of.Song.Dynasty.2005.EP01.HDTV.1080i.H264-XX.mp4安徽卫视大宋提刑官第1集\n\n影视名称的各单词间的间隔符通常为空格或 . 号。\n2.2 上映年份即影视首次上映的年份，有些影片在不同国家和地区的上映时间不同，很多英剧美剧往往也是边播边拍，这样有时甚至会出现跨年上映的情况，此时上映年份就以发行商所在国家的首次公映年份为准。\n2.3 季度集数如果是剧集的话，还会在名称中加上剧集的季度和集数，通常用字母 S 后加数字代表第几季，通常用字母 E 后加数字代表第几集，如：\n犯罪心理.Criminal.Minds.S04E05.中英字幕.WEB-HR.aac.720p.x264-人人影视.mp4\n\n对于国外剧集，比如英剧美剧往往都是边播边拍，而且往往都是一拍好几季，因此命名时可能不会添加年份，而更重视季度和集数，如：\nDownton.Abbey.S06E08.1080p.BluRay.x264-SHORTBREHD唐顿庄园第6季第8集\n\n此外，如果将某剧集的某一季或多季打包在一起，就不需要再写清集数，只需要把季数写清楚即可，如：\nDownton.Abbey.S06.1080p.BluRay.x264-SHORTBREHD唐顿庄园第6季全Downton.Abbey.S01-06.720p.BluRay.x264-SHORTBREHD唐顿庄园全6季\n\n国产的剧集与国外不同，没有季的概念，且某些经典IP还会被多次翻拍，因此为了能够区分不同版本的同名剧集，对国产电视剧集命名时，通常只会填写播出年份和集数，不怎么填写季度和集数，同时在备注中还可以标明导演或主演名称。\nThe.Romance.Of.The.Condor.Heroes.2014.WEB-DL.1080p.H264.AAC-XXX神雕侠侣2014年版全52集陈晓陈妍希主演\n\n2.3 片源来源通常包含以下内容，以下来源影片质量基本自上到下依次递减：\nBluRay-Remux/BDRemux前者即蓝光原碟，简称BD，后者指无损提取出蓝光原盘里面的视频音频数据，无损转录WEB-DL即Web-Download，由流媒体视频无损转录，按分辨率还分为1080P.Web-DL、720P.Web-DLBDRip/BRRip前者指对原始的蓝光原盘高清数据进行压缩、重编码，画质相比蓝光原盘会有损失，后者指从蓝光格式的资源转制，相当于转制再转制WEBRip由流媒体视频重编码、压缩，画质较差，比HDTV版略好DVDRip/HDRip从最终版的DVD重编码、压缩的版本，该格式较老，DVDScr预览版或测试版的DVD，画质与TC版差不多，早于DVD发布，但这种片源下方通常有滚动文字，包含版权和反盗版电话号码等HDTVRip/HDRIP由高清片源（高清电视录制、高清卫星星号接收）转录压制，多见于电视剧尤其是美剧TVRip/HDTV从电视（数码有线电视、卫星电视捕捉等）转录压制后通过电视卡捕捉，再压缩成文件，多见于综艺或体育节目，随着高清数字电视的普及，TVRip已很少见R5DVD联盟为保护知识产权，将全世界依地理区域分为1-6区，R5即俄罗斯5区， 绝大部分R5版片源画质不错，但由于音轨来源不同，音质有好有差，综合来看R5版DVD质量比不上欧美版DVD，但是R5区的DVD发布比欧美版早，所以经常有R5版DVD视频加其它渠道获得的英语音轨合成的片源TC(Telecine)胶片版，对胶片数字拷贝后的视频加上外置音源（一般是影院座椅上为听障人士设的耳机孔）后的版本，通常画面亮度不足，但质量远超TS版TS(Telesync)准枪版，在影院盗录的视频加上外置音源后的版本，画质较CAM更好，经常有修复的TS版流出CAM枪版，在影院盗录的音视频，画质和音质都最差\n\n需要注意的是，有时候会出现类似 HR-HDTV、WEB-HR、BD-HR 这种格式的片源来源写法，这通常表示这个版本是压制组精校完字幕后压制的无广告供收藏的版本， 可以理解为影视的精校版。有时候压制组会在片源来源后面加上 V2、V3、V4 样的信息，这代表该版本是第2、3、4修正版的意思，可能修正了字幕错误或者压制错误。\n2.4 影片版本通常包含以下内容：\nRepack 重新打包版，压制组为修复上一版本的瑕疵发布的版本Propeg 优化版，压制组觉得这一版本比上一版本更好Recode 二次编码版，在以前已经发布过的版本上用重新编码过滤以去除字幕，纠正颜色等。Director&#x27;s Cut/DC 导演剪辑版，不受投资方、制片人、市场等因素限制，由导演拍摄电影的意愿剪辑的版本Uncut 或者 Unrated 未分级版，即未因分级制度删减影片中裸露、暴力、血腥、粗口等片段的版本Theatrical.Cut 剧场版，即院线上映的版本，为适宜大众观看，可能会删减影片中裸露、暴力、血腥、粗口等片段LIMITED 限制级版，指该电影只在有限的电影院放映，通常少于250家，比如艺术电影Extended 加长版，和导演剪辑版类似，增加了一些上映版中没有或者是上映后才补拍的画面IMAX 即巨幕（Image Maximum），是一种能够放映比传统胶片更大和更高解像度的电影放映系统，标准的IMAX银幕为22米宽、16米高Anniversary.Edition 周年纪念版Mastered 重新灌录版，主要用于CD，意为重新缩混的版本，电影资源中用于老片蓝光修复、4K蓝光修复或某某周年纪念版时Open.Matte 满屏版，即把正式发行的电影中不是全幅有黑边的画面全部做成没有黑边满幅的，与普通版本没有画质上的差异3D 3D版，说明影片支持3D设备播放With Extras 带花絮版，带影片制作花絮的版本WORKPRINT 指从未完成的电影拷贝转制而成的版本，可能会缺失镜头和音乐，质量可能极好，也可能极差，通常作为高质量片源之外的附加收藏\n\n有时候在命名的最后，即压制组名称之后还会出现 sample 的字样，这表示这个文件是影片中的一小段示例。\n2.5 分辨率通常包含以下内容：\n2160P/4K/UHD(Ultra High Definition)/超高清家庭影院常用分辨率1440P/2k/QHD1080P/FHD(Full High Definition)/全高清720P/HD(High Definition)/高清SD(Standard Definition)/标清未达到 720p 标准视频的分辨率应选择 SD，如 DVDRip\n\n可以看到，高清分辨率的命名规则由 数字+字母 两部分组成，如 720P、1080i 等。\n其中，字母有 i 和 p 两种，i 代表交错式扫描视频显示方式（interlaced scan，又称隔行扫描），p 代表逐行扫描（progressive scan），隔行扫描是先扫描单数的垂直画面，再扫描双数的垂直画面，由于人的视觉暂留效应，人眼看到的是平滑的运动而非闪动的半帧半帧的图像，但图像传输过程中只需要 1080p 的一半带宽，因此更多应用在电视节目的传输中（HDTV往往都是1080i），而电影则几乎都是采用逐行扫描的方式。\n数字则代表垂直方向的扫描线数，1080 就代表垂直方向有 1080 条扫描线，同理 720 就代表有 720 条扫描线。之所以没有水平方向的扫描线数，是因为常说的屏幕比例多为 16:9（蓝光光盘中的比例也是 16：9，不足的部分会用黑边补齐），因此通过垂直方向的扫描线数就可以计算出其整体分辨率为 1920*1080、1280*720，但是有时也会有特殊情况，比如苹果的 iPod Touch 4 采用的屏幕比例为 4:3，因此其分辨率为 960*720。\n随着技术的发展，又增加了 2k、4k 分辨率等概念。值得注意的是，2k 和 4k 指的并不是垂直方向的扫描线数，而是水平方向的扫描线数，也即 2k 分辨率的标准为 2048*1080，实际上与常说的 1080p 相似，但并非同一概念。此外，2560*1440、2048*1556 等也可被称为 2k 分辨率。同理，4k 分辨率是指水平分辨率达到 4000 像素的级别，常见的有 3840*2160、4096*2160 两种规格。\n2.6 视频编码通常包含以下内容，其他类型的编码更为老旧，不推荐使用：\nH.265/HEVC/x265AV1 是与 H.265 属同一级别的最新编码，多在流媒体上使用，是在H.264标准基础上提出的更高效率视频编码，被视为是H.264/MPEG-4 AVC标准的继任者，可以支持4K清晰度甚至超高清电视（UHDTV），最高清晰度可以达到8192*4320，在相同的图象质量下，相比于H.264，通过H.265编码的视频码流大小比H.264减少大约39-44%。H.264/MPEG-4AVC/x264H.264 最大的优势是具有很高的数据压缩比率，在同等图像质量的条件下，H.264 的压缩比是 MPEG-2 的 2 倍以上，是 MPEG-4 的 1.5～2 倍。在H.264中，根据色深不同，又可以细分出x264-6bit、x264-8bit、x264-10bit等，10bit拥有更好的画质和色深，但对播放设备的硬件要求也相对更高。DivX/XviD\n\n2.7 视频帧率通常包含以下内容\n24fps30fps60fps 目前最常见电影帧率120fps\n\n2.8 色彩深度通常包含以下内容，色深是描述单个像素的色彩比特数，即色彩的丰富程度\n8bit 主流视频色深10bit 压缩视频体积时会使用，能实现更低的码率的同时保证更好的质量\n\n2.9 动态范围通常包含以下内容：\nDolby Vision/DoVi 杜比视界，最高可达12bitHDR10+HDR10SDR 普通画面\n\n2.10 音频编码通常包含以下内容：\n杜比数字系统(Dolby Digital):TrueHD(THD)、Dolby Digital Plus(杜比数字+/DD+/E-AC3/EC3)、Dolby Digital(杜比数字/DD/AC3)数字影院系统(Digital TheaterSystems，DTS):Master Audio(DTS HD MA)、DTS-HD(DTS++)、DTSWAV/LPCM非压缩音频格式APE/FLAC无损压缩音频格式mp3/AAC有损压缩音频格式\n\n2.11 语言信息通常包含音频或内嵌字幕的语言类别，如：\n字幕语言：CHS_JP（表示字幕为简体中文和日语）\n\n2.12 校验码部分片源还会在命名中带上文件的校验码，一般的校验码类型有MD5、SHA、CRC32等，用于检验文件的完整性，判断文件是否在传输下载过程中发生损坏，如：\n[SBSUB][CONAN][M23][BDRIP][1080P]HEVC_THD_AAC][CHS_CHT_JP](C2336DEA).mkv\n\n2.13 封装格式通常包含以下内容：\nPS（Program Stream）封装，一般用在HD DVD中，对应的后缀一般是.VOB、.EVOTS（Transport Strea）封装，一般用在BD中，后缀为.TS，现在一些电视节目也用TS、TP封，一般x264重编码的高清影片都使用MKV封装，后缀为.MKV-现在非常常见的封装格式WMV封装，较少使用，以.WMV为后缀主要方便用于Xbox的播放AVI封装，现在很少有使用，以.AVI为后缀MOV封装，现在很少有使用，以.MOV为后缀-主要是Apple的高清预告片MP4封装，一般用于移动视频封装，兼容性较好\n\n"}]